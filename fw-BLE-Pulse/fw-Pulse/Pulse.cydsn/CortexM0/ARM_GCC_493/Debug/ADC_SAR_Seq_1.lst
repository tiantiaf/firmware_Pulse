ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB3:
  25              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 2


  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000400u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 3


  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 4


 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0F20     		mov	r0, #15
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  37              		.loc 1 173 0
  38 000a 0F20     		mov	r0, #15
  39 000c 2449     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 234B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 234B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 5


 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2249     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2249     		ldr	r1, .L6+16
  56              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 234A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 224A     		ldr	r2, .L6+24
  64 0030 224B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 224A     		ldr	r2, .L6+32
  68 0036 234B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 224A     		ldr	r2, .L6+40
  73 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 224A     		ldr	r2, .L6+44
  76 0042 2349     		ldr	r1, .L6+48
  77 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 2349     		ldr	r1, .L6+52
  80 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 2349     		ldr	r1, .L6+56
  83 004c 0A68     		ldr	r2, [r1]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0243     		orr	r2, r0
  87 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 6


 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  88              		.loc 1 197 0 discriminator 4
  89 0056 214A     		ldr	r2, .L6+60
  90 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  91              		.loc 1 198 0 discriminator 4
  92 005a 214A     		ldr	r2, .L6+64
  93 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  94              		.loc 1 199 0 discriminator 4
  95 005e 0122     		mov	r2, #1
  96 0060 204B     		ldr	r3, .L6+68
  97 0062 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
  98              		.loc 1 206 0 discriminator 4
  99 0064 204A     		ldr	r2, .L6+72
 100 0066 1168     		ldr	r1, [r2]
 101              	.LVL2:
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 102              		.loc 1 221 0 discriminator 4
 103 0068 204B     		ldr	r3, .L6+76
 104 006a 0B40     		and	r3, r1
 105 006c 8021     		mov	r1, #128
 106              	.LVL3:
 107 006e 8905     		lsl	r1, r1, #22
 108 0070 0B43     		orr	r3, r1
 109              	.LVL4:
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 110              		.loc 1 226 0 discriminator 4
 111 0072 1360     		str	r3, [r2]
 112              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 7


 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 113              		.loc 1 232 0 discriminator 4
 114 0074 0023     		mov	r3, #0
 115              	.LVL6:
 116 0076 0FE0     		b	.L3
 117              	.LVL7:
 118              	.L4:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 119              		.loc 1 253 0
 120 0078 9A00     		lsl	r2, r3, #2
 121 007a 1D49     		ldr	r1, .L6+80
 122 007c 8C46     		mov	ip, r1
 123 007e 6244     		add	r2, r2, ip
 124 0080 8021     		mov	r1, #128
 125 0082 C900     		lsl	r1, r1, #3
 126 0084 1160     		str	r1, [r2]
 127              	.LVL8:
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 8


 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 128              		.loc 1 298 0
 129 0086 5900     		lsl	r1, r3, #1
 130 0088 0020     		mov	r0, #0
 131 008a 1A4A     		ldr	r2, .L6+84
 132 008c 8852     		strh	r0, [r1, r2]
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 133              		.loc 1 311 0
 134 008e 9900     		lsl	r1, r3, #2
 135 0090 1948     		ldr	r0, .L6+88
 136 0092 1A4A     		ldr	r2, .L6+92
 137 0094 8850     		str	r0, [r1, r2]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 138              		.loc 1 232 0
 139 0096 0133     		add	r3, r3, #1
 140              	.LVL9:
 141              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 9


 142              		.loc 1 232 0 is_stmt 0 discriminator 1
 143 0098 002B     		cmp	r3, #0
 144 009a EDD0     		beq	.L4
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 145              		.loc 1 314 0 is_stmt 1
 146              		@ sp needed
 147 009c 08BD     		pop	{r3, pc}
 148              	.L7:
 149 009e C046     		.align	2
 150              	.L6:
 151 00a0 00000000 		.word	ADC_SAR_Seq_1_ISR
 152 00a4 20003A40 		.word	1077542944
 153 00a8 80033A40 		.word	1077543808
 154 00ac 70021053 		.word	1393558128
 155 00b0 70020053 		.word	1392509552
 156 00b4 00003A40 		.word	1077542912
 157 00b8 EC000080 		.word	-2147483412
 158 00bc 04003A40 		.word	1077542916
 159 00c0 0000FF07 		.word	134152192
 160 00c4 18003A40 		.word	1077542936
 161 00c8 1C003A40 		.word	1077542940
 162 00cc 04000400 		.word	262148
 163 00d0 10003A40 		.word	1077542928
 164 00d4 14003A40 		.word	1077542932
 165 00d8 00033A40 		.word	1077543680
 166 00dc 28023A40 		.word	1077543464
 167 00e0 38023A40 		.word	1077543480
 168 00e4 18023A40 		.word	1077543448
 169 00e8 30003A40 		.word	1077542960
 170 00ec FEFFFFDF 		.word	-536870914
 171 00f0 80003A40 		.word	1077543040
 172 00f4 00000000 		.word	ADC_SAR_Seq_1_offset
 173 00f8 3E180000 		.word	6206
 174 00fc 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 175              		.cfi_endproc
 176              	.LFE3:
 177              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 178              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 179              		.align	2
 180              		.global	ADC_SAR_Seq_1_Enable
 181              		.code	16
 182              		.thumb_func
 183              		.type	ADC_SAR_Seq_1_Enable, %function
 184              	ADC_SAR_Seq_1_Enable:
 185              	.LFB4:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 10


 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 186              		.loc 1 331 0
 187              		.cfi_startproc
 188 0000 08B5     		push	{r3, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 192              		.loc 1 332 0
 193 0002 094B     		ldr	r3, .L11
 194 0004 1B68     		ldr	r3, [r3]
 195 0006 002B     		cmp	r3, #0
 196 0008 0CDB     		blt	.L8
 197              	.L10:
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 198              		.loc 1 336 0 discriminator 1
 199 000a 084B     		ldr	r3, .L11+4
 200 000c 1B68     		ldr	r3, [r3]
 201 000e 002B     		cmp	r3, #0
 202 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 203              		.loc 1 342 0
 204 0012 054A     		ldr	r2, .L11
 205 0014 1368     		ldr	r3, [r2]
 206 0016 8021     		mov	r1, #128
 207 0018 0906     		lsl	r1, r1, #24
 208 001a 0B43     		orr	r3, r1
 209 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 210              		.loc 1 345 0
 211 001e 0A20     		mov	r0, #10
 212 0020 FFF7FEFF 		bl	CyDelayUs
 213              	.LVL10:
 214              	.L8:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 215              		.loc 1 347 0
 216              		@ sp needed
 217 0024 08BD     		pop	{r3, pc}
 218              	.L12:
 219 0026 C046     		.align	2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 11


 220              	.L11:
 221 0028 00003A40 		.word	1077542912
 222 002c 08023A40 		.word	1077543432
 223              		.cfi_endproc
 224              	.LFE4:
 225              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 226              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 227              		.align	2
 228              		.global	ADC_SAR_Seq_1_Start
 229              		.code	16
 230              		.thumb_func
 231              		.type	ADC_SAR_Seq_1_Start, %function
 232              	ADC_SAR_Seq_1_Start:
 233              	.LFB2:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 234              		.loc 1 64 0
 235              		.cfi_startproc
 236 0000 08B5     		push	{r3, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 240              		.loc 1 66 0
 241 0002 064B     		ldr	r3, .L15
 242 0004 1B78     		ldrb	r3, [r3]
 243 0006 002B     		cmp	r3, #0
 244 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 245              		.loc 1 68 0
 246 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 247              	.LVL11:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 248              		.loc 1 69 0
 249 000e 0122     		mov	r2, #1
 250 0010 024B     		ldr	r3, .L15
 251 0012 1A70     		strb	r2, [r3]
 252              	.L14:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 253              		.loc 1 71 0
 254 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 255              	.LVL12:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 256              		.loc 1 72 0
 257              		@ sp needed
 258 0018 08BD     		pop	{r3, pc}
 259              	.L16:
 260 001a C046     		.align	2
 261              	.L15:
 262 001c 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE2:
 265              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 266              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 267              		.align	2
 268              		.global	ADC_SAR_Seq_1_Stop
 269              		.code	16
 270              		.thumb_func
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 12


 271              		.type	ADC_SAR_Seq_1_Stop, %function
 272              	ADC_SAR_Seq_1_Stop:
 273              	.LFB5:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 274              		.loc 1 366 0
 275              		.cfi_startproc
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 276              		.loc 1 367 0
 277 0000 024A     		ldr	r2, .L18
 278 0002 1368     		ldr	r3, [r2]
 279 0004 5B00     		lsl	r3, r3, #1
 280 0006 5B08     		lsr	r3, r3, #1
 281 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 282              		.loc 1 368 0
 283              		@ sp needed
 284 000a 7047     		bx	lr
 285              	.L19:
 286              		.align	2
 287              	.L18:
 288 000c 00003A40 		.word	1077542912
 289              		.cfi_endproc
 290              	.LFE5:
 291              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 292              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 293              		.align	2
 294              		.global	ADC_SAR_Seq_1_StartConvert
 295              		.code	16
 296              		.thumb_func
 297              		.type	ADC_SAR_Seq_1_StartConvert, %function
 298              	ADC_SAR_Seq_1_StartConvert:
 299              	.LFB6:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 13


 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 300              		.loc 1 392 0
 301              		.cfi_startproc
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 302              		.loc 1 394 0
 303 0000 034A     		ldr	r2, .L21
 304 0002 1368     		ldr	r3, [r2]
 305 0004 8021     		mov	r1, #128
 306 0006 4902     		lsl	r1, r1, #9
 307 0008 0B43     		orr	r3, r1
 308 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 309              		.loc 1 399 0
 310              		@ sp needed
 311 000c 7047     		bx	lr
 312              	.L22:
 313 000e C046     		.align	2
 314              	.L21:
 315 0010 04003A40 		.word	1077542916
 316              		.cfi_endproc
 317              	.LFE6:
 318              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 319              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 320              		.align	2
 321              		.global	ADC_SAR_Seq_1_StopConvert
 322              		.code	16
 323              		.thumb_func
 324              		.type	ADC_SAR_Seq_1_StopConvert, %function
 325              	ADC_SAR_Seq_1_StopConvert:
 326              	.LFB7:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 14


 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 327              		.loc 1 417 0
 328              		.cfi_startproc
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 329              		.loc 1 419 0
 330 0000 024A     		ldr	r2, .L24
 331 0002 1168     		ldr	r1, [r2]
 332 0004 024B     		ldr	r3, .L24+4
 333 0006 0B40     		and	r3, r1
 334 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 335              		.loc 1 421 0
 336              		@ sp needed
 337 000a 7047     		bx	lr
 338              	.L25:
 339              		.align	2
 340              	.L24:
 341 000c 04003A40 		.word	1077542916
 342 0010 FFFFFEFF 		.word	-65537
 343              		.cfi_endproc
 344              	.LFE7:
 345              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 346              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 347              		.align	2
 348              		.global	ADC_SAR_Seq_1_IsEndConversion
 349              		.code	16
 350              		.thumb_func
 351              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 352              	ADC_SAR_Seq_1_IsEndConversion:
 353              	.LFB8:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 15


 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 354              		.loc 1 451 0
 355              		.cfi_startproc
 356              	.LVL13:
 357 0000 021C     		mov	r2, r0
 358              	.LVL14:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 359              		.loc 1 454 0
 360 0002 8307     		lsl	r3, r0, #30
 361 0004 0CD0     		beq	.L30
 362              	.LVL15:
 363              	.L29:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 364              		.loc 1 458 0 discriminator 2
 365 0006 074B     		ldr	r3, .L31
 366 0008 1B68     		ldr	r3, [r3]
 367 000a 0120     		mov	r0, #1
 368 000c 1840     		and	r0, r3
 369              	.LVL16:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 370              		.loc 1 459 0 discriminator 2
 371 000e 01D1     		bne	.L28
 372              		.loc 1 459 0 is_stmt 0 discriminator 1
 373 0010 9307     		lsl	r3, r2, #30
 374 0012 F8D4     		bmi	.L29
 375              	.L28:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 376              		.loc 1 461 0 is_stmt 1
 377 0014 0028     		cmp	r0, #0
 378 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 379              		.loc 1 464 0
 380 0018 0122     		mov	r2, #1
 381              	.LVL17:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 16


 382 001a 024B     		ldr	r3, .L31
 383 001c 1A60     		str	r2, [r3]
 384 001e 00E0     		b	.L27
 385              	.LVL18:
 386              	.L30:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 387              		.loc 1 452 0
 388 0020 0020     		mov	r0, #0
 389              	.LVL19:
 390              	.L27:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 391              		.loc 1 486 0
 392              		@ sp needed
 393 0022 7047     		bx	lr
 394              	.L32:
 395              		.align	2
 396              	.L31:
 397 0024 10023A40 		.word	1077543440
 398              		.cfi_endproc
 399              	.LFE8:
 400              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 401              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 402              		.align	2
 403              		.global	ADC_SAR_Seq_1_GetResult16
 404              		.code	16
 405              		.thumb_func
 406              		.type	ADC_SAR_Seq_1_GetResult16, %function
 407              	ADC_SAR_Seq_1_GetResult16:
 408              	.LFB9:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 17


 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 409              		.loc 1 505 0
 410              		.cfi_startproc
 411              	.LVL20:
 412 0000 10B5     		push	{r4, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 14, -4
 416 0002 041E     		sub	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 417              		.loc 1 509 0
 418 0004 02D0     		beq	.L34
 419              		.loc 1 509 0 is_stmt 0 discriminator 1
 420 0006 0020     		mov	r0, #0
 421              	.LVL21:
 422 0008 FFF7FEFF 		bl	CyHalt
 423              	.LVL22:
 424              	.L34:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 425              		.loc 1 511 0 is_stmt 1
 426 000c 002C     		cmp	r4, #0
 427 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 428              		.loc 1 513 0
 429 0010 A400     		lsl	r4, r4, #2
 430              	.LVL23:
 431 0012 054B     		ldr	r3, .L37
 432 0014 9C46     		mov	ip, r3
 433 0016 6444     		add	r4, r4, ip
 434 0018 2068     		ldr	r0, [r4]
 435 001a 0004     		lsl	r0, r0, #16
 436 001c 000C     		lsr	r0, r0, #16
 437              	.LVL24:
 438 001e 00E0     		b	.L35
 439              	.LVL25:
 440              	.L36:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 18


 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 441              		.loc 1 521 0
 442 0020 0020     		mov	r0, #0
 443              	.LVL26:
 444              	.L35:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 445              		.loc 1 525 0
 446 0022 00B2     		sxth	r0, r0
 447              	.LVL27:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 448              		.loc 1 526 0
 449              		@ sp needed
 450 0024 10BD     		pop	{r4, pc}
 451              	.L38:
 452 0026 C046     		.align	2
 453              	.L37:
 454 0028 80013A40 		.word	1077543296
 455              		.cfi_endproc
 456              	.LFE9:
 457              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 458              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_SAR_Seq_1_SetChanMask
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 464              	ADC_SAR_Seq_1_SetChanMask:
 465              	.LFB10:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 19


 466              		.loc 1 550 0
 467              		.cfi_startproc
 468              	.LVL28:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 469              		.loc 1 551 0
 470 0000 0123     		mov	r3, #1
 471 0002 1840     		and	r0, r3
 472              	.LVL29:
 473 0004 014B     		ldr	r3, .L40
 474 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 475              		.loc 1 552 0
 476              		@ sp needed
 477 0008 7047     		bx	lr
 478              	.L41:
 479 000a C046     		.align	2
 480              	.L40:
 481 000c 20003A40 		.word	1077542944
 482              		.cfi_endproc
 483              	.LFE10:
 484              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 485              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 486              		.align	2
 487              		.global	ADC_SAR_Seq_1_SetLowLimit
 488              		.code	16
 489              		.thumb_func
 490              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 491              	ADC_SAR_Seq_1_SetLowLimit:
 492              	.LFB11:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 20


 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 493              		.loc 1 594 0
 494              		.cfi_startproc
 495              	.LVL30:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 496              		.loc 1 595 0
 497 0000 054A     		ldr	r2, .L43
 498 0002 1368     		ldr	r3, [r2]
 499 0004 1B0C     		lsr	r3, r3, #16
 500 0006 1B04     		lsl	r3, r3, #16
 501 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 502              		.loc 1 596 0
 503 000a 1368     		ldr	r3, [r2]
 504 000c 0004     		lsl	r0, r0, #16
 505              	.LVL31:
 506 000e 000C     		lsr	r0, r0, #16
 507 0010 1843     		orr	r0, r3
 508 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 509              		.loc 1 597 0
 510              		@ sp needed
 511 0014 7047     		bx	lr
 512              	.L44:
 513 0016 C046     		.align	2
 514              	.L43:
 515 0018 18003A40 		.word	1077542936
 516              		.cfi_endproc
 517              	.LFE11:
 518              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 519              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 520              		.align	2
 521              		.global	ADC_SAR_Seq_1_SetHighLimit
 522              		.code	16
 523              		.thumb_func
 524              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 525              	ADC_SAR_Seq_1_SetHighLimit:
 526              	.LFB12:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 21


 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 527              		.loc 1 615 0
 528              		.cfi_startproc
 529              	.LVL32:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 530              		.loc 1 616 0
 531 0000 044A     		ldr	r2, .L46
 532 0002 1368     		ldr	r3, [r2]
 533 0004 1B04     		lsl	r3, r3, #16
 534 0006 1B0C     		lsr	r3, r3, #16
 535 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 536              		.loc 1 617 0
 537 000a 1368     		ldr	r3, [r2]
 538 000c 0004     		lsl	r0, r0, #16
 539              	.LVL33:
 540 000e 1843     		orr	r0, r3
 541 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 542              		.loc 1 618 0
 543              		@ sp needed
 544 0012 7047     		bx	lr
 545              	.L47:
 546              		.align	2
 547              	.L46:
 548 0014 18003A40 		.word	1077542936
 549              		.cfi_endproc
 550              	.LFE12:
 551              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 552              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 553              		.align	2
 554              		.global	ADC_SAR_Seq_1_SetLimitMask
 555              		.code	16
 556              		.thumb_func
 557              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 558              	ADC_SAR_Seq_1_SetLimitMask:
 559              	.LFB13:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 22


 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 560              		.loc 1 639 0
 561              		.cfi_startproc
 562              	.LVL34:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 563              		.loc 1 640 0
 564 0000 0123     		mov	r3, #1
 565 0002 1840     		and	r0, r3
 566              	.LVL35:
 567 0004 014B     		ldr	r3, .L49
 568 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 569              		.loc 1 641 0
 570              		@ sp needed
 571 0008 7047     		bx	lr
 572              	.L50:
 573 000a C046     		.align	2
 574              	.L49:
 575 000c 38023A40 		.word	1077543480
 576              		.cfi_endproc
 577              	.LFE13:
 578              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 579              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 580              		.align	2
 581              		.global	ADC_SAR_Seq_1_SetSatMask
 582              		.code	16
 583              		.thumb_func
 584              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 585              	ADC_SAR_Seq_1_SetSatMask:
 586              	.LFB14:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 23


 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 587              		.loc 1 662 0
 588              		.cfi_startproc
 589              	.LVL36:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 590              		.loc 1 663 0
 591 0000 0123     		mov	r3, #1
 592 0002 1840     		and	r0, r3
 593              	.LVL37:
 594 0004 014B     		ldr	r3, .L52
 595 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 596              		.loc 1 664 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L53:
 600 000a C046     		.align	2
 601              	.L52:
 602 000c 28023A40 		.word	1077543464
 603              		.cfi_endproc
 604              	.LFE14:
 605              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 606              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 607              		.align	2
 608              		.global	ADC_SAR_Seq_1_SetOffset
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_SAR_Seq_1_SetOffset, %function
 612              	ADC_SAR_Seq_1_SetOffset:
 613              	.LFB15:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 24


 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 614              		.loc 1 690 0
 615              		.cfi_startproc
 616              	.LVL38:
 617 0000 38B5     		push	{r3, r4, r5, lr}
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 3, -16
 620              		.cfi_offset 4, -12
 621              		.cfi_offset 5, -8
 622              		.cfi_offset 14, -4
 623 0002 041C     		mov	r4, r0
 624 0004 0D1C     		mov	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 625              		.loc 1 692 0
 626 0006 0028     		cmp	r0, #0
 627 0008 02D0     		beq	.L55
 628              		.loc 1 692 0 is_stmt 0 discriminator 1
 629 000a 0020     		mov	r0, #0
 630              	.LVL39:
 631 000c FFF7FEFF 		bl	CyHalt
 632              	.LVL40:
 633              	.L55:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 634              		.loc 1 694 0 is_stmt 1
 635 0010 6400     		lsl	r4, r4, #1
 636              	.LVL41:
 637 0012 014B     		ldr	r3, .L56
 638 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 639              		.loc 1 695 0
 640              		@ sp needed
 641 0016 38BD     		pop	{r3, r4, r5, pc}
 642              	.L57:
 643              		.align	2
 644              	.L56:
 645 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 646              		.cfi_endproc
 647              	.LFE15:
 648              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 649              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 650              		.align	2
 651              		.global	ADC_SAR_Seq_1_SetGain
 652              		.code	16
 653              		.thumb_func
 654              		.type	ADC_SAR_Seq_1_SetGain, %function
 655              	ADC_SAR_Seq_1_SetGain:
 656              	.LFB16:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 25


 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 657              		.loc 1 724 0
 658              		.cfi_startproc
 659              	.LVL42:
 660 0000 38B5     		push	{r3, r4, r5, lr}
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 3, -16
 663              		.cfi_offset 4, -12
 664              		.cfi_offset 5, -8
 665              		.cfi_offset 14, -4
 666 0002 041C     		mov	r4, r0
 667 0004 0D1C     		mov	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 668              		.loc 1 726 0
 669 0006 0028     		cmp	r0, #0
 670 0008 02D0     		beq	.L59
 671              		.loc 1 726 0 is_stmt 0 discriminator 1
 672 000a 0020     		mov	r0, #0
 673              	.LVL43:
 674 000c FFF7FEFF 		bl	CyHalt
 675              	.LVL44:
 676              	.L59:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 677              		.loc 1 728 0 is_stmt 1
 678 0010 A400     		lsl	r4, r4, #2
 679              	.LVL45:
 680 0012 014B     		ldr	r3, .L60
 681 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 682              		.loc 1 729 0
 683              		@ sp needed
 684              	.LVL46:
 685 0016 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 26


 686              	.L61:
 687              		.align	2
 688              	.L60:
 689 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 690              		.cfi_endproc
 691              	.LFE16:
 692              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 693              		.global	__aeabi_idiv
 694              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 695              		.align	2
 696              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 697              		.code	16
 698              		.thumb_func
 699              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 700              	ADC_SAR_Seq_1_CountsTo_mVolts:
 701              	.LFB17:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 702              		.loc 1 757 0
 703              		.cfi_startproc
 704              	.LVL47:
 705 0000 38B5     		push	{r3, r4, r5, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 3, -16
 708              		.cfi_offset 4, -12
 709              		.cfi_offset 5, -8
 710              		.cfi_offset 14, -4
 711 0002 041C     		mov	r4, r0
 712 0004 0D1C     		mov	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 27


 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 713              		.loc 1 761 0
 714 0006 0028     		cmp	r0, #0
 715 0008 02D0     		beq	.L63
 716              		.loc 1 761 0 is_stmt 0 discriminator 1
 717 000a 0020     		mov	r0, #0
 718              	.LVL48:
 719 000c FFF7FEFF 		bl	CyHalt
 720              	.LVL49:
 721              	.L63:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 722              		.loc 1 772 0 is_stmt 1
 723 0010 6300     		lsl	r3, r4, #1
 724 0012 0F4A     		ldr	r2, .L66
 725 0014 995A     		ldrh	r1, [r3, r2]
 726 0016 691A     		sub	r1, r5, r1
 727 0018 09B2     		sxth	r1, r1
 728              	.LVL50:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 729              		.loc 1 774 0
 730 001a 0E48     		ldr	r0, .L66+4
 731 001c 021C     		mov	r2, r0
 732 001e 4A43     		mul	r2, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 733              		.loc 1 775 0
 734 0020 0029     		cmp	r1, #0
 735 0022 06DD     		ble	.L64
 736              		.loc 1 775 0 is_stmt 0 discriminator 1
 737 0024 A300     		lsl	r3, r4, #2
 738 0026 0C49     		ldr	r1, .L66+8
 739              	.LVL51:
 740 0028 5B58     		ldr	r3, [r3, r1]
 741 002a D80F     		lsr	r0, r3, #31
 742 002c C018     		add	r0, r0, r3
 743 002e 4310     		asr	r3, r0, #1
 744 0030 06E0     		b	.L65
 745              	.LVL52:
 746              	.L64:
 747              		.loc 1 775 0 discriminator 2
 748 0032 A300     		lsl	r3, r4, #2
 749 0034 0849     		ldr	r1, .L66+8
 750              	.LVL53:
 751 0036 5B58     		ldr	r3, [r3, r1]
 752 0038 D80F     		lsr	r0, r3, #31
 753 003a C318     		add	r3, r0, r3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 28


 754 003c 5B10     		asr	r3, r3, #1
 755 003e 5B42     		neg	r3, r3
 756              	.L65:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 757              		.loc 1 774 0 is_stmt 1
 758 0040 D018     		add	r0, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 759              		.loc 1 776 0
 760 0042 A400     		lsl	r4, r4, #2
 761              	.LVL54:
 762 0044 044B     		ldr	r3, .L66+8
 763 0046 E158     		ldr	r1, [r4, r3]
 764 0048 FFF7FEFF 		bl	__aeabi_idiv
 765              	.LVL55:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 766              		.loc 1 778 0
 767 004c 00B2     		sxth	r0, r0
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 768              		.loc 1 779 0
 769              		@ sp needed
 770 004e 38BD     		pop	{r3, r4, r5, pc}
 771              	.L67:
 772              		.align	2
 773              	.L66:
 774 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 775 0054 10270000 		.word	10000
 776 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 777              		.cfi_endproc
 778              	.LFE17:
 779              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 780              		.global	__aeabi_lmul
 781              		.global	__aeabi_ldivmod
 782              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 783              		.align	2
 784              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 785              		.code	16
 786              		.thumb_func
 787              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 788              	ADC_SAR_Seq_1_CountsTo_uVolts:
 789              	.LFB18:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 29


 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 790              		.loc 1 811 0
 791              		.cfi_startproc
 792              	.LVL56:
 793 0000 38B5     		push	{r3, r4, r5, lr}
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 3, -16
 796              		.cfi_offset 4, -12
 797              		.cfi_offset 5, -8
 798              		.cfi_offset 14, -4
 799 0002 051C     		mov	r5, r0
 800 0004 0C1C     		mov	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 801              		.loc 1 815 0
 802 0006 0028     		cmp	r0, #0
 803 0008 02D0     		beq	.L69
 804              		.loc 1 815 0 is_stmt 0 discriminator 1
 805 000a 0020     		mov	r0, #0
 806              	.LVL57:
 807 000c FFF7FEFF 		bl	CyHalt
 808              	.LVL58:
 809              	.L69:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 810              		.loc 1 826 0 is_stmt 1
 811 0010 6A00     		lsl	r2, r5, #1
 812 0012 084B     		ldr	r3, .L70
 813 0014 D05A     		ldrh	r0, [r2, r3]
 814 0016 201A     		sub	r0, r4, r0
 815 0018 00B2     		sxth	r0, r0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 30


 816              	.LVL59:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 817              		.loc 1 828 0
 818 001a C117     		asr	r1, r0, #31
 819 001c 064A     		ldr	r2, .L70+4
 820 001e 0023     		mov	r3, #0
 821 0020 FFF7FEFF 		bl	__aeabi_lmul
 822              	.LVL60:
 823 0024 AD00     		lsl	r5, r5, #2
 824              	.LVL61:
 825 0026 054B     		ldr	r3, .L70+8
 826 0028 EA58     		ldr	r2, [r5, r3]
 827 002a D317     		asr	r3, r2, #31
 828 002c FFF7FEFF 		bl	__aeabi_ldivmod
 829              	.LVL62:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 830              		.loc 1 831 0
 831              		@ sp needed
 832 0030 38BD     		pop	{r3, r4, r5, pc}
 833              	.L71:
 834 0032 C046     		.align	2
 835              	.L70:
 836 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 837 0038 80969800 		.word	10000000
 838 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 839              		.cfi_endproc
 840              	.LFE18:
 841              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 842              		.global	__aeabi_i2f
 843              		.global	__aeabi_fmul
 844              		.global	__aeabi_fdiv
 845              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 846              		.align	2
 847              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 848              		.code	16
 849              		.thumb_func
 850              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 851              	ADC_SAR_Seq_1_CountsTo_Volts:
 852              	.LFB19:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 31


 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 853              		.loc 1 856 0
 854              		.cfi_startproc
 855              	.LVL63:
 856 0000 38B5     		push	{r3, r4, r5, lr}
 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 3, -16
 859              		.cfi_offset 4, -12
 860              		.cfi_offset 5, -8
 861              		.cfi_offset 14, -4
 862 0002 041C     		mov	r4, r0
 863 0004 0D1C     		mov	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 864              		.loc 1 860 0
 865 0006 0028     		cmp	r0, #0
 866 0008 02D0     		beq	.L73
 867              		.loc 1 860 0 is_stmt 0 discriminator 1
 868 000a 0020     		mov	r0, #0
 869              	.LVL64:
 870 000c FFF7FEFF 		bl	CyHalt
 871              	.LVL65:
 872              	.L73:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 873              		.loc 1 871 0 is_stmt 1
 874 0010 6200     		lsl	r2, r4, #1
 875 0012 0A4B     		ldr	r3, .L74
 876 0014 D05A     		ldrh	r0, [r2, r3]
 877 0016 281A     		sub	r0, r5, r0
 878 0018 00B2     		sxth	r0, r0
 879              	.LVL66:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 880              		.loc 1 873 0
 881 001a FFF7FEFF 		bl	__aeabi_i2f
 882              	.LVL67:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 32


 883 001e 0849     		ldr	r1, .L74+4
 884 0020 FFF7FEFF 		bl	__aeabi_fmul
 885              	.LVL68:
 886 0024 051C     		add	r5, r0, #0
 887 0026 A400     		lsl	r4, r4, #2
 888              	.LVL69:
 889 0028 064B     		ldr	r3, .L74+8
 890 002a E058     		ldr	r0, [r4, r3]
 891 002c FFF7FEFF 		bl	__aeabi_i2f
 892              	.LVL70:
 893 0030 011C     		add	r1, r0, #0
 894 0032 281C     		add	r0, r5, #0
 895 0034 FFF7FEFF 		bl	__aeabi_fdiv
 896              	.LVL71:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 897              		.loc 1 876 0
 898              		@ sp needed
 899 0038 38BD     		pop	{r3, r4, r5, pc}
 900              	.L75:
 901 003a C046     		.align	2
 902              	.L74:
 903 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 904 0040 00002041 		.word	1092616192
 905 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 906              		.cfi_endproc
 907              	.LFE19:
 908              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 909              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 910              		.comm	ADC_SAR_Seq_1_offset,2,4
 911              		.global	ADC_SAR_Seq_1_initVar
 912              		.bss
 913              		.set	.LANCHOR0,. + 0
 914              		.type	ADC_SAR_Seq_1_initVar, %object
 915              		.size	ADC_SAR_Seq_1_initVar, 1
 916              	ADC_SAR_Seq_1_initVar:
 917 0000 00       		.space	1
 918              		.text
 919              	.Letext0:
 920              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 921              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 922              		.section	.debug_info,"",%progbits
 923              	.Ldebug_info0:
 924 0000 94050000 		.4byte	0x594
 925 0004 0400     		.2byte	0x4
 926 0006 00000000 		.4byte	.Ldebug_abbrev0
 927 000a 04       		.byte	0x4
 928 000b 01       		.uleb128 0x1
 929 000c 61020000 		.4byte	.LASF61
 930 0010 01       		.byte	0x1
 931 0011 06030000 		.4byte	.LASF62
 932 0015 D9030000 		.4byte	.LASF63
 933 0019 00000000 		.4byte	.Ldebug_ranges0+0
 934 001d 00000000 		.4byte	0
 935 0021 00000000 		.4byte	.Ldebug_line0
 936 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 33


 937 0026 01       		.byte	0x1
 938 0027 06       		.byte	0x6
 939 0028 DA000000 		.4byte	.LASF0
 940 002c 02       		.uleb128 0x2
 941 002d 01       		.byte	0x1
 942 002e 08       		.byte	0x8
 943 002f 6D030000 		.4byte	.LASF1
 944 0033 02       		.uleb128 0x2
 945 0034 02       		.byte	0x2
 946 0035 05       		.byte	0x5
 947 0036 7B030000 		.4byte	.LASF2
 948 003a 02       		.uleb128 0x2
 949 003b 02       		.byte	0x2
 950 003c 07       		.byte	0x7
 951 003d C3010000 		.4byte	.LASF3
 952 0041 02       		.uleb128 0x2
 953 0042 04       		.byte	0x4
 954 0043 05       		.byte	0x5
 955 0044 25010000 		.4byte	.LASF4
 956 0048 02       		.uleb128 0x2
 957 0049 04       		.byte	0x4
 958 004a 07       		.byte	0x7
 959 004b A1010000 		.4byte	.LASF5
 960 004f 02       		.uleb128 0x2
 961 0050 08       		.byte	0x8
 962 0051 05       		.byte	0x5
 963 0052 CC000000 		.4byte	.LASF6
 964 0056 02       		.uleb128 0x2
 965 0057 08       		.byte	0x8
 966 0058 07       		.byte	0x7
 967 0059 86000000 		.4byte	.LASF7
 968 005d 03       		.uleb128 0x3
 969 005e 04       		.byte	0x4
 970 005f 05       		.byte	0x5
 971 0060 696E7400 		.ascii	"int\000"
 972 0064 02       		.uleb128 0x2
 973 0065 04       		.byte	0x4
 974 0066 07       		.byte	0x7
 975 0067 8D010000 		.4byte	.LASF8
 976 006b 04       		.uleb128 0x4
 977 006c 2E010000 		.4byte	.LASF9
 978 0070 02       		.byte	0x2
 979 0071 B901     		.2byte	0x1b9
 980 0073 2C000000 		.4byte	0x2c
 981 0077 04       		.uleb128 0x4
 982 0078 15000000 		.4byte	.LASF10
 983 007c 02       		.byte	0x2
 984 007d BA01     		.2byte	0x1ba
 985 007f 3A000000 		.4byte	0x3a
 986 0083 04       		.uleb128 0x4
 987 0084 45010000 		.4byte	.LASF11
 988 0088 02       		.byte	0x2
 989 0089 BB01     		.2byte	0x1bb
 990 008b 48000000 		.4byte	0x48
 991 008f 04       		.uleb128 0x4
 992 0090 8A040000 		.4byte	.LASF12
 993 0094 02       		.byte	0x2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 34


 994 0095 BD01     		.2byte	0x1bd
 995 0097 33000000 		.4byte	0x33
 996 009b 04       		.uleb128 0x4
 997 009c 01010000 		.4byte	.LASF13
 998 00a0 02       		.byte	0x2
 999 00a1 BE01     		.2byte	0x1be
 1000 00a3 41000000 		.4byte	0x41
 1001 00a7 04       		.uleb128 0x4
 1002 00a8 0F020000 		.4byte	.LASF14
 1003 00ac 02       		.byte	0x2
 1004 00ad BF01     		.2byte	0x1bf
 1005 00af B3000000 		.4byte	0xb3
 1006 00b3 02       		.uleb128 0x2
 1007 00b4 04       		.byte	0x4
 1008 00b5 04       		.byte	0x4
 1009 00b6 2D030000 		.4byte	.LASF15
 1010 00ba 02       		.uleb128 0x2
 1011 00bb 08       		.byte	0x8
 1012 00bc 04       		.byte	0x4
 1013 00bd 3E010000 		.4byte	.LASF16
 1014 00c1 04       		.uleb128 0x4
 1015 00c2 EF020000 		.4byte	.LASF17
 1016 00c6 02       		.byte	0x2
 1017 00c7 C401     		.2byte	0x1c4
 1018 00c9 4F000000 		.4byte	0x4f
 1019 00cd 02       		.uleb128 0x2
 1020 00ce 01       		.byte	0x1
 1021 00cf 08       		.byte	0x8
 1022 00d0 C7030000 		.4byte	.LASF18
 1023 00d4 04       		.uleb128 0x4
 1024 00d5 09020000 		.4byte	.LASF19
 1025 00d9 02       		.byte	0x2
 1026 00da 6502     		.2byte	0x265
 1027 00dc E0000000 		.4byte	0xe0
 1028 00e0 05       		.uleb128 0x5
 1029 00e1 83000000 		.4byte	0x83
 1030 00e5 04       		.uleb128 0x4
 1031 00e6 CC030000 		.4byte	.LASF20
 1032 00ea 02       		.byte	0x2
 1033 00eb 7502     		.2byte	0x275
 1034 00ed F1000000 		.4byte	0xf1
 1035 00f1 06       		.uleb128 0x6
 1036 00f2 04       		.byte	0x4
 1037 00f3 F7000000 		.4byte	0xf7
 1038 00f7 07       		.uleb128 0x7
 1039 00f8 02       		.uleb128 0x2
 1040 00f9 04       		.byte	0x4
 1041 00fa 07       		.byte	0x7
 1042 00fb 17020000 		.4byte	.LASF21
 1043 00ff 08       		.uleb128 0x8
 1044 0100 1C000000 		.4byte	.LASF25
 1045 0104 01       		.byte	0x1
 1046 0105 5E       		.byte	0x5e
 1047 0106 00000000 		.4byte	.LFB3
 1048 010a 00010000 		.4byte	.LFE3-.LFB3
 1049 010e 01       		.uleb128 0x1
 1050 010f 9C       		.byte	0x9c
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 35


 1051 0110 69010000 		.4byte	0x169
 1052 0114 09       		.uleb128 0x9
 1053 0115 BC030000 		.4byte	.LASF22
 1054 0119 01       		.byte	0x1
 1055 011a 60       		.byte	0x60
 1056 011b 83000000 		.4byte	0x83
 1057 011f 00000000 		.4byte	.LLST0
 1058 0123 09       		.uleb128 0x9
 1059 0124 B9010000 		.4byte	.LASF23
 1060 0128 01       		.byte	0x1
 1061 0129 61       		.byte	0x61
 1062 012a 83000000 		.4byte	0x83
 1063 012e 1F000000 		.4byte	.LLST1
 1064 0132 09       		.uleb128 0x9
 1065 0133 37000000 		.4byte	.LASF24
 1066 0137 01       		.byte	0x1
 1067 0138 62       		.byte	0x62
 1068 0139 9B000000 		.4byte	0x9b
 1069 013d 5D000000 		.4byte	.LLST2
 1070 0141 0A       		.uleb128 0xa
 1071 0142 0A000000 		.4byte	.LVL0
 1072 0146 49050000 		.4byte	0x549
 1073 014a 59010000 		.4byte	0x159
 1074 014e 0B       		.uleb128 0xb
 1075 014f 01       		.uleb128 0x1
 1076 0150 51       		.byte	0x51
 1077 0151 01       		.uleb128 0x1
 1078 0152 33       		.byte	0x33
 1079 0153 0B       		.uleb128 0xb
 1080 0154 01       		.uleb128 0x1
 1081 0155 50       		.byte	0x50
 1082 0156 01       		.uleb128 0x1
 1083 0157 3F       		.byte	0x3f
 1084 0158 00       		.byte	0
 1085 0159 0C       		.uleb128 0xc
 1086 015a 12000000 		.4byte	.LVL1
 1087 015e 5F050000 		.4byte	0x55f
 1088 0162 0B       		.uleb128 0xb
 1089 0163 01       		.uleb128 0x1
 1090 0164 50       		.byte	0x50
 1091 0165 01       		.uleb128 0x1
 1092 0166 3F       		.byte	0x3f
 1093 0167 00       		.byte	0
 1094 0168 00       		.byte	0
 1095 0169 0D       		.uleb128 0xd
 1096 016a 9D000000 		.4byte	.LASF26
 1097 016e 01       		.byte	0x1
 1098 016f 4A01     		.2byte	0x14a
 1099 0171 00000000 		.4byte	.LFB4
 1100 0175 30000000 		.4byte	.LFE4-.LFB4
 1101 0179 01       		.uleb128 0x1
 1102 017a 9C       		.byte	0x9c
 1103 017b 8F010000 		.4byte	0x18f
 1104 017f 0C       		.uleb128 0xc
 1105 0180 24000000 		.4byte	.LVL10
 1106 0184 79050000 		.4byte	0x579
 1107 0188 0B       		.uleb128 0xb
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 36


 1108 0189 01       		.uleb128 0x1
 1109 018a 50       		.byte	0x50
 1110 018b 01       		.uleb128 0x1
 1111 018c 3A       		.byte	0x3a
 1112 018d 00       		.byte	0
 1113 018e 00       		.byte	0
 1114 018f 08       		.uleb128 0x8
 1115 0190 72000000 		.4byte	.LASF27
 1116 0194 01       		.byte	0x1
 1117 0195 3F       		.byte	0x3f
 1118 0196 00000000 		.4byte	.LFB2
 1119 019a 20000000 		.4byte	.LFE2-.LFB2
 1120 019e 01       		.uleb128 0x1
 1121 019f 9C       		.byte	0x9c
 1122 01a0 B7010000 		.4byte	0x1b7
 1123 01a4 0E       		.uleb128 0xe
 1124 01a5 0E000000 		.4byte	.LVL11
 1125 01a9 FF000000 		.4byte	0xff
 1126 01ad 0E       		.uleb128 0xe
 1127 01ae 18000000 		.4byte	.LVL12
 1128 01b2 69010000 		.4byte	0x169
 1129 01b6 00       		.byte	0
 1130 01b7 0F       		.uleb128 0xf
 1131 01b8 49030000 		.4byte	.LASF28
 1132 01bc 01       		.byte	0x1
 1133 01bd 6D01     		.2byte	0x16d
 1134 01bf 00000000 		.4byte	.LFB5
 1135 01c3 10000000 		.4byte	.LFE5-.LFB5
 1136 01c7 01       		.uleb128 0x1
 1137 01c8 9C       		.byte	0x9c
 1138 01c9 0F       		.uleb128 0xf
 1139 01ca 3E000000 		.4byte	.LASF29
 1140 01ce 01       		.byte	0x1
 1141 01cf 8701     		.2byte	0x187
 1142 01d1 00000000 		.4byte	.LFB6
 1143 01d5 14000000 		.4byte	.LFE6-.LFB6
 1144 01d9 01       		.uleb128 0x1
 1145 01da 9C       		.byte	0x9c
 1146 01db 0F       		.uleb128 0xf
 1147 01dc 47020000 		.4byte	.LASF30
 1148 01e0 01       		.byte	0x1
 1149 01e1 A001     		.2byte	0x1a0
 1150 01e3 00000000 		.4byte	.LFB7
 1151 01e7 14000000 		.4byte	.LFE7-.LFB7
 1152 01eb 01       		.uleb128 0x1
 1153 01ec 9C       		.byte	0x9c
 1154 01ed 10       		.uleb128 0x10
 1155 01ee 29020000 		.4byte	.LASF32
 1156 01f2 01       		.byte	0x1
 1157 01f3 C201     		.2byte	0x1c2
 1158 01f5 83000000 		.4byte	0x83
 1159 01f9 00000000 		.4byte	.LFB8
 1160 01fd 28000000 		.4byte	.LFE8-.LFB8
 1161 0201 01       		.uleb128 0x1
 1162 0202 9C       		.byte	0x9c
 1163 0203 28020000 		.4byte	0x228
 1164 0207 11       		.uleb128 0x11
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 37


 1165 0208 6F010000 		.4byte	.LASF34
 1166 020c 01       		.byte	0x1
 1167 020d C201     		.2byte	0x1c2
 1168 020f 83000000 		.4byte	0x83
 1169 0213 73000000 		.4byte	.LLST3
 1170 0217 12       		.uleb128 0x12
 1171 0218 6B040000 		.4byte	.LASF31
 1172 021c 01       		.byte	0x1
 1173 021d C401     		.2byte	0x1c4
 1174 021f 83000000 		.4byte	0x83
 1175 0223 B8000000 		.4byte	.LLST4
 1176 0227 00       		.byte	0
 1177 0228 10       		.uleb128 0x10
 1178 0229 B2000000 		.4byte	.LASF33
 1179 022d 01       		.byte	0x1
 1180 022e F801     		.2byte	0x1f8
 1181 0230 8F000000 		.4byte	0x8f
 1182 0234 00000000 		.4byte	.LFB9
 1183 0238 2C000000 		.4byte	.LFE9-.LFB9
 1184 023c 01       		.uleb128 0x1
 1185 023d 9C       		.byte	0x9c
 1186 023e 72020000 		.4byte	0x272
 1187 0242 11       		.uleb128 0x11
 1188 0243 C2030000 		.4byte	.LASF35
 1189 0247 01       		.byte	0x1
 1190 0248 F801     		.2byte	0x1f8
 1191 024a 83000000 		.4byte	0x83
 1192 024e EE000000 		.4byte	.LLST5
 1193 0252 12       		.uleb128 0x12
 1194 0253 AB040000 		.4byte	.LASF36
 1195 0257 01       		.byte	0x1
 1196 0258 FA01     		.2byte	0x1fa
 1197 025a 83000000 		.4byte	0x83
 1198 025e 33010000 		.4byte	.LLST6
 1199 0262 0C       		.uleb128 0xc
 1200 0263 0C000000 		.4byte	.LVL22
 1201 0267 8A050000 		.4byte	0x58a
 1202 026b 0B       		.uleb128 0xb
 1203 026c 01       		.uleb128 0x1
 1204 026d 50       		.byte	0x50
 1205 026e 01       		.uleb128 0x1
 1206 026f 30       		.byte	0x30
 1207 0270 00       		.byte	0
 1208 0271 00       		.byte	0
 1209 0272 0D       		.uleb128 0xd
 1210 0273 A2030000 		.4byte	.LASF37
 1211 0277 01       		.byte	0x1
 1212 0278 2502     		.2byte	0x225
 1213 027a 00000000 		.4byte	.LFB10
 1214 027e 10000000 		.4byte	.LFE10-.LFB10
 1215 0282 01       		.uleb128 0x1
 1216 0283 9C       		.byte	0x9c
 1217 0284 99020000 		.4byte	0x299
 1218 0288 11       		.uleb128 0x11
 1219 0289 4C010000 		.4byte	.LASF38
 1220 028d 01       		.byte	0x1
 1221 028e 2502     		.2byte	0x225
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 38


 1222 0290 83000000 		.4byte	0x83
 1223 0294 51010000 		.4byte	.LLST7
 1224 0298 00       		.byte	0
 1225 0299 0D       		.uleb128 0xd
 1226 029a 22040000 		.4byte	.LASF39
 1227 029e 01       		.byte	0x1
 1228 029f 5102     		.2byte	0x251
 1229 02a1 00000000 		.4byte	.LFB11
 1230 02a5 1C000000 		.4byte	.LFE11-.LFB11
 1231 02a9 01       		.uleb128 0x1
 1232 02aa 9C       		.byte	0x9c
 1233 02ab C0020000 		.4byte	0x2c0
 1234 02af 11       		.uleb128 0x11
 1235 02b0 20020000 		.4byte	.LASF40
 1236 02b4 01       		.byte	0x1
 1237 02b5 5102     		.2byte	0x251
 1238 02b7 83000000 		.4byte	0x83
 1239 02bb 72010000 		.4byte	.LLST8
 1240 02bf 00       		.byte	0
 1241 02c0 0D       		.uleb128 0xd
 1242 02c1 E6000000 		.4byte	.LASF41
 1243 02c5 01       		.byte	0x1
 1244 02c6 6602     		.2byte	0x266
 1245 02c8 00000000 		.4byte	.LFB12
 1246 02cc 18000000 		.4byte	.LFE12-.LFB12
 1247 02d0 01       		.uleb128 0x1
 1248 02d1 9C       		.byte	0x9c
 1249 02d2 E7020000 		.4byte	0x2e7
 1250 02d6 11       		.uleb128 0x11
 1251 02d7 5C030000 		.4byte	.LASF42
 1252 02db 01       		.byte	0x1
 1253 02dc 6602     		.2byte	0x266
 1254 02de 83000000 		.4byte	0x83
 1255 02e2 93010000 		.4byte	.LLST9
 1256 02e6 00       		.byte	0
 1257 02e7 0D       		.uleb128 0xd
 1258 02e8 90040000 		.4byte	.LASF43
 1259 02ec 01       		.byte	0x1
 1260 02ed 7E02     		.2byte	0x27e
 1261 02ef 00000000 		.4byte	.LFB13
 1262 02f3 10000000 		.4byte	.LFE13-.LFB13
 1263 02f7 01       		.uleb128 0x1
 1264 02f8 9C       		.byte	0x9c
 1265 02f9 0E030000 		.4byte	0x30e
 1266 02fd 11       		.uleb128 0x11
 1267 02fe 4C010000 		.4byte	.LASF38
 1268 0302 01       		.byte	0x1
 1269 0303 7E02     		.2byte	0x27e
 1270 0305 83000000 		.4byte	0x83
 1271 0309 B4010000 		.4byte	.LLST10
 1272 030d 00       		.byte	0
 1273 030e 0D       		.uleb128 0xd
 1274 030f 59000000 		.4byte	.LASF44
 1275 0313 01       		.byte	0x1
 1276 0314 9502     		.2byte	0x295
 1277 0316 00000000 		.4byte	.LFB14
 1278 031a 10000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 39


 1279 031e 01       		.uleb128 0x1
 1280 031f 9C       		.byte	0x9c
 1281 0320 35030000 		.4byte	0x335
 1282 0324 11       		.uleb128 0x11
 1283 0325 4C010000 		.4byte	.LASF38
 1284 0329 01       		.byte	0x1
 1285 032a 9502     		.2byte	0x295
 1286 032c 83000000 		.4byte	0x83
 1287 0330 D5010000 		.4byte	.LLST11
 1288 0334 00       		.byte	0
 1289 0335 0D       		.uleb128 0xd
 1290 0336 72040000 		.4byte	.LASF45
 1291 033a 01       		.byte	0x1
 1292 033b B102     		.2byte	0x2b1
 1293 033d 00000000 		.4byte	.LFB15
 1294 0341 1C000000 		.4byte	.LFE15-.LFB15
 1295 0345 01       		.uleb128 0x1
 1296 0346 9C       		.byte	0x9c
 1297 0347 7B030000 		.4byte	0x37b
 1298 034b 11       		.uleb128 0x11
 1299 034c C2030000 		.4byte	.LASF35
 1300 0350 01       		.byte	0x1
 1301 0351 B102     		.2byte	0x2b1
 1302 0353 83000000 		.4byte	0x83
 1303 0357 F6010000 		.4byte	.LLST12
 1304 035b 11       		.uleb128 0x11
 1305 035c 3C040000 		.4byte	.LASF46
 1306 0360 01       		.byte	0x1
 1307 0361 B102     		.2byte	0x2b1
 1308 0363 8F000000 		.4byte	0x8f
 1309 0367 22020000 		.4byte	.LLST13
 1310 036b 0C       		.uleb128 0xc
 1311 036c 10000000 		.4byte	.LVL40
 1312 0370 8A050000 		.4byte	0x58a
 1313 0374 0B       		.uleb128 0xb
 1314 0375 01       		.uleb128 0x1
 1315 0376 50       		.byte	0x50
 1316 0377 01       		.uleb128 0x1
 1317 0378 30       		.byte	0x30
 1318 0379 00       		.byte	0
 1319 037a 00       		.byte	0
 1320 037b 0D       		.uleb128 0xd
 1321 037c 33030000 		.4byte	.LASF47
 1322 0380 01       		.byte	0x1
 1323 0381 D302     		.2byte	0x2d3
 1324 0383 00000000 		.4byte	.LFB16
 1325 0387 1C000000 		.4byte	.LFE16-.LFB16
 1326 038b 01       		.uleb128 0x1
 1327 038c 9C       		.byte	0x9c
 1328 038d C1030000 		.4byte	0x3c1
 1329 0391 11       		.uleb128 0x11
 1330 0392 C2030000 		.4byte	.LASF35
 1331 0396 01       		.byte	0x1
 1332 0397 D302     		.2byte	0x2d3
 1333 0399 83000000 		.4byte	0x83
 1334 039d 43020000 		.4byte	.LLST14
 1335 03a1 11       		.uleb128 0x11
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 40


 1336 03a2 2F000000 		.4byte	.LASF48
 1337 03a6 01       		.byte	0x1
 1338 03a7 D302     		.2byte	0x2d3
 1339 03a9 9B000000 		.4byte	0x9b
 1340 03ad 6F020000 		.4byte	.LLST15
 1341 03b1 0C       		.uleb128 0xc
 1342 03b2 10000000 		.4byte	.LVL44
 1343 03b6 8A050000 		.4byte	0x58a
 1344 03ba 0B       		.uleb128 0xb
 1345 03bb 01       		.uleb128 0x1
 1346 03bc 50       		.byte	0x50
 1347 03bd 01       		.uleb128 0x1
 1348 03be 30       		.byte	0x30
 1349 03bf 00       		.byte	0
 1350 03c0 00       		.byte	0
 1351 03c1 13       		.uleb128 0x13
 1352 03c2 51010000 		.4byte	.LASF49
 1353 03c6 01       		.byte	0x1
 1354 03c7 F402     		.2byte	0x2f4
 1355 03c9 8F000000 		.4byte	0x8f
 1356 03cd 00000000 		.4byte	.LFB17
 1357 03d1 5C000000 		.4byte	.LFE17-.LFB17
 1358 03d5 01       		.uleb128 0x1
 1359 03d6 9C       		.byte	0x9c
 1360 03d7 19040000 		.4byte	0x419
 1361 03db 11       		.uleb128 0x11
 1362 03dc C2030000 		.4byte	.LASF35
 1363 03e0 01       		.byte	0x1
 1364 03e1 F402     		.2byte	0x2f4
 1365 03e3 83000000 		.4byte	0x83
 1366 03e7 9F020000 		.4byte	.LLST16
 1367 03eb 11       		.uleb128 0x11
 1368 03ec 43040000 		.4byte	.LASF50
 1369 03f0 01       		.byte	0x1
 1370 03f1 F402     		.2byte	0x2f4
 1371 03f3 8F000000 		.4byte	0x8f
 1372 03f7 CB020000 		.4byte	.LLST17
 1373 03fb 14       		.uleb128 0x14
 1374 03fc 02020000 		.4byte	.LASF51
 1375 0400 01       		.byte	0x1
 1376 0401 F602     		.2byte	0x2f6
 1377 0403 8F000000 		.4byte	0x8f
 1378 0407 01       		.uleb128 0x1
 1379 0408 50       		.byte	0x50
 1380 0409 0C       		.uleb128 0xc
 1381 040a 10000000 		.4byte	.LVL49
 1382 040e 8A050000 		.4byte	0x58a
 1383 0412 0B       		.uleb128 0xb
 1384 0413 01       		.uleb128 0x1
 1385 0414 50       		.byte	0x50
 1386 0415 01       		.uleb128 0x1
 1387 0416 30       		.byte	0x30
 1388 0417 00       		.byte	0
 1389 0418 00       		.byte	0
 1390 0419 13       		.uleb128 0x13
 1391 041a 07010000 		.4byte	.LASF52
 1392 041e 01       		.byte	0x1
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 41


 1393 041f 2A03     		.2byte	0x32a
 1394 0421 9B000000 		.4byte	0x9b
 1395 0425 00000000 		.4byte	.LFB18
 1396 0429 40000000 		.4byte	.LFE18-.LFB18
 1397 042d 01       		.uleb128 0x1
 1398 042e 9C       		.byte	0x9c
 1399 042f 6F040000 		.4byte	0x46f
 1400 0433 11       		.uleb128 0x11
 1401 0434 C2030000 		.4byte	.LASF35
 1402 0438 01       		.byte	0x1
 1403 0439 2A03     		.2byte	0x32a
 1404 043b 83000000 		.4byte	0x83
 1405 043f 02030000 		.4byte	.LLST18
 1406 0443 11       		.uleb128 0x11
 1407 0444 43040000 		.4byte	.LASF50
 1408 0448 01       		.byte	0x1
 1409 0449 2A03     		.2byte	0x32a
 1410 044b 8F000000 		.4byte	0x8f
 1411 044f 2E030000 		.4byte	.LLST19
 1412 0453 15       		.uleb128 0x15
 1413 0454 9A010000 		.4byte	.LASF64
 1414 0458 01       		.byte	0x1
 1415 0459 2C03     		.2byte	0x32c
 1416 045b C1000000 		.4byte	0xc1
 1417 045f 0C       		.uleb128 0xc
 1418 0460 10000000 		.4byte	.LVL58
 1419 0464 8A050000 		.4byte	0x58a
 1420 0468 0B       		.uleb128 0xb
 1421 0469 01       		.uleb128 0x1
 1422 046a 50       		.byte	0x50
 1423 046b 01       		.uleb128 0x1
 1424 046c 30       		.byte	0x30
 1425 046d 00       		.byte	0
 1426 046e 00       		.byte	0
 1427 046f 13       		.uleb128 0x13
 1428 0470 85030000 		.4byte	.LASF53
 1429 0474 01       		.byte	0x1
 1430 0475 5703     		.2byte	0x357
 1431 0477 A7000000 		.4byte	0xa7
 1432 047b 00000000 		.4byte	.LFB19
 1433 047f 48000000 		.4byte	.LFE19-.LFB19
 1434 0483 01       		.uleb128 0x1
 1435 0484 9C       		.byte	0x9c
 1436 0485 C7040000 		.4byte	0x4c7
 1437 0489 11       		.uleb128 0x11
 1438 048a C2030000 		.4byte	.LASF35
 1439 048e 01       		.byte	0x1
 1440 048f 5703     		.2byte	0x357
 1441 0491 83000000 		.4byte	0x83
 1442 0495 5A030000 		.4byte	.LLST20
 1443 0499 11       		.uleb128 0x11
 1444 049a 43040000 		.4byte	.LASF50
 1445 049e 01       		.byte	0x1
 1446 049f 5703     		.2byte	0x357
 1447 04a1 8F000000 		.4byte	0x8f
 1448 04a5 86030000 		.4byte	.LLST21
 1449 04a9 14       		.uleb128 0x14
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 42


 1450 04aa B3010000 		.4byte	.LASF54
 1451 04ae 01       		.byte	0x1
 1452 04af 5903     		.2byte	0x359
 1453 04b1 A7000000 		.4byte	0xa7
 1454 04b5 01       		.uleb128 0x1
 1455 04b6 50       		.byte	0x50
 1456 04b7 0C       		.uleb128 0xc
 1457 04b8 10000000 		.4byte	.LVL65
 1458 04bc 8A050000 		.4byte	0x58a
 1459 04c0 0B       		.uleb128 0xb
 1460 04c1 01       		.uleb128 0x1
 1461 04c2 50       		.byte	0x50
 1462 04c3 01       		.uleb128 0x1
 1463 04c4 30       		.byte	0x30
 1464 04c5 00       		.byte	0
 1465 04c6 00       		.byte	0
 1466 04c7 16       		.uleb128 0x16
 1467 04c8 83000000 		.4byte	0x83
 1468 04cc D7040000 		.4byte	0x4d7
 1469 04d0 17       		.uleb128 0x17
 1470 04d1 F8000000 		.4byte	0xf8
 1471 04d5 00       		.byte	0
 1472 04d6 00       		.byte	0
 1473 04d7 18       		.uleb128 0x18
 1474 04d8 E5010000 		.4byte	.LASF55
 1475 04dc 01       		.byte	0x1
 1476 04dd 21       		.byte	0x21
 1477 04de E7040000 		.4byte	0x4e7
 1478 04e2 04       		.byte	0x4
 1479 04e3 00       		.byte	0
 1480 04e4 04       		.byte	0x4
 1481 04e5 00       		.byte	0
 1482 04e6 00       		.byte	0
 1483 04e7 19       		.uleb128 0x19
 1484 04e8 C7040000 		.4byte	0x4c7
 1485 04ec 1A       		.uleb128 0x1a
 1486 04ed 77010000 		.4byte	.LASF56
 1487 04f1 01       		.byte	0x1
 1488 04f2 18       		.byte	0x18
 1489 04f3 6B000000 		.4byte	0x6b
 1490 04f7 05       		.uleb128 0x5
 1491 04f8 03       		.byte	0x3
 1492 04f9 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1493 04fd 16       		.uleb128 0x16
 1494 04fe 8F000000 		.4byte	0x8f
 1495 0502 0D050000 		.4byte	0x50d
 1496 0506 17       		.uleb128 0x17
 1497 0507 F8000000 		.4byte	0xf8
 1498 050b 00       		.byte	0
 1499 050c 00       		.byte	0
 1500 050d 1A       		.uleb128 0x1a
 1501 050e 00000000 		.4byte	.LASF57
 1502 0512 01       		.byte	0x1
 1503 0513 19       		.byte	0x19
 1504 0514 1E050000 		.4byte	0x51e
 1505 0518 05       		.uleb128 0x5
 1506 0519 03       		.byte	0x3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 43


 1507 051a 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1508 051e 05       		.uleb128 0x5
 1509 051f FD040000 		.4byte	0x4fd
 1510 0523 16       		.uleb128 0x16
 1511 0524 9B000000 		.4byte	0x9b
 1512 0528 33050000 		.4byte	0x533
 1513 052c 17       		.uleb128 0x17
 1514 052d F8000000 		.4byte	0xf8
 1515 0531 00       		.byte	0
 1516 0532 00       		.byte	0
 1517 0533 1A       		.uleb128 0x1a
 1518 0534 4D040000 		.4byte	.LASF58
 1519 0538 01       		.byte	0x1
 1520 0539 1A       		.byte	0x1a
 1521 053a 44050000 		.4byte	0x544
 1522 053e 05       		.uleb128 0x5
 1523 053f 03       		.byte	0x3
 1524 0540 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1525 0544 05       		.uleb128 0x5
 1526 0545 23050000 		.4byte	0x523
 1527 0549 1B       		.uleb128 0x1b
 1528 054a F5020000 		.4byte	.LASF59
 1529 054e 03       		.byte	0x3
 1530 054f C0       		.byte	0xc0
 1531 0550 5F050000 		.4byte	0x55f
 1532 0554 1C       		.uleb128 0x1c
 1533 0555 6B000000 		.4byte	0x6b
 1534 0559 1C       		.uleb128 0x1c
 1535 055a 6B000000 		.4byte	0x6b
 1536 055e 00       		.byte	0
 1537 055f 1D       		.uleb128 0x1d
 1538 0560 D6010000 		.4byte	.LASF65
 1539 0564 03       		.byte	0x3
 1540 0565 BD       		.byte	0xbd
 1541 0566 E5000000 		.4byte	0xe5
 1542 056a 79050000 		.4byte	0x579
 1543 056e 1C       		.uleb128 0x1c
 1544 056f 6B000000 		.4byte	0x6b
 1545 0573 1C       		.uleb128 0x1c
 1546 0574 E5000000 		.4byte	0xe5
 1547 0578 00       		.byte	0
 1548 0579 1B       		.uleb128 0x1b
 1549 057a 34010000 		.4byte	.LASF60
 1550 057e 03       		.byte	0x3
 1551 057f DA       		.byte	0xda
 1552 0580 8A050000 		.4byte	0x58a
 1553 0584 1C       		.uleb128 0x1c
 1554 0585 77000000 		.4byte	0x77
 1555 0589 00       		.byte	0
 1556 058a 1E       		.uleb128 0x1e
 1557 058b 66030000 		.4byte	.LASF66
 1558 058f 03       		.byte	0x3
 1559 0590 E7       		.byte	0xe7
 1560 0591 1C       		.uleb128 0x1c
 1561 0592 6B000000 		.4byte	0x6b
 1562 0596 00       		.byte	0
 1563 0597 00       		.byte	0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 44


 1564              		.section	.debug_abbrev,"",%progbits
 1565              	.Ldebug_abbrev0:
 1566 0000 01       		.uleb128 0x1
 1567 0001 11       		.uleb128 0x11
 1568 0002 01       		.byte	0x1
 1569 0003 25       		.uleb128 0x25
 1570 0004 0E       		.uleb128 0xe
 1571 0005 13       		.uleb128 0x13
 1572 0006 0B       		.uleb128 0xb
 1573 0007 03       		.uleb128 0x3
 1574 0008 0E       		.uleb128 0xe
 1575 0009 1B       		.uleb128 0x1b
 1576 000a 0E       		.uleb128 0xe
 1577 000b 55       		.uleb128 0x55
 1578 000c 17       		.uleb128 0x17
 1579 000d 11       		.uleb128 0x11
 1580 000e 01       		.uleb128 0x1
 1581 000f 10       		.uleb128 0x10
 1582 0010 17       		.uleb128 0x17
 1583 0011 00       		.byte	0
 1584 0012 00       		.byte	0
 1585 0013 02       		.uleb128 0x2
 1586 0014 24       		.uleb128 0x24
 1587 0015 00       		.byte	0
 1588 0016 0B       		.uleb128 0xb
 1589 0017 0B       		.uleb128 0xb
 1590 0018 3E       		.uleb128 0x3e
 1591 0019 0B       		.uleb128 0xb
 1592 001a 03       		.uleb128 0x3
 1593 001b 0E       		.uleb128 0xe
 1594 001c 00       		.byte	0
 1595 001d 00       		.byte	0
 1596 001e 03       		.uleb128 0x3
 1597 001f 24       		.uleb128 0x24
 1598 0020 00       		.byte	0
 1599 0021 0B       		.uleb128 0xb
 1600 0022 0B       		.uleb128 0xb
 1601 0023 3E       		.uleb128 0x3e
 1602 0024 0B       		.uleb128 0xb
 1603 0025 03       		.uleb128 0x3
 1604 0026 08       		.uleb128 0x8
 1605 0027 00       		.byte	0
 1606 0028 00       		.byte	0
 1607 0029 04       		.uleb128 0x4
 1608 002a 16       		.uleb128 0x16
 1609 002b 00       		.byte	0
 1610 002c 03       		.uleb128 0x3
 1611 002d 0E       		.uleb128 0xe
 1612 002e 3A       		.uleb128 0x3a
 1613 002f 0B       		.uleb128 0xb
 1614 0030 3B       		.uleb128 0x3b
 1615 0031 05       		.uleb128 0x5
 1616 0032 49       		.uleb128 0x49
 1617 0033 13       		.uleb128 0x13
 1618 0034 00       		.byte	0
 1619 0035 00       		.byte	0
 1620 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 45


 1621 0037 35       		.uleb128 0x35
 1622 0038 00       		.byte	0
 1623 0039 49       		.uleb128 0x49
 1624 003a 13       		.uleb128 0x13
 1625 003b 00       		.byte	0
 1626 003c 00       		.byte	0
 1627 003d 06       		.uleb128 0x6
 1628 003e 0F       		.uleb128 0xf
 1629 003f 00       		.byte	0
 1630 0040 0B       		.uleb128 0xb
 1631 0041 0B       		.uleb128 0xb
 1632 0042 49       		.uleb128 0x49
 1633 0043 13       		.uleb128 0x13
 1634 0044 00       		.byte	0
 1635 0045 00       		.byte	0
 1636 0046 07       		.uleb128 0x7
 1637 0047 15       		.uleb128 0x15
 1638 0048 00       		.byte	0
 1639 0049 27       		.uleb128 0x27
 1640 004a 19       		.uleb128 0x19
 1641 004b 00       		.byte	0
 1642 004c 00       		.byte	0
 1643 004d 08       		.uleb128 0x8
 1644 004e 2E       		.uleb128 0x2e
 1645 004f 01       		.byte	0x1
 1646 0050 3F       		.uleb128 0x3f
 1647 0051 19       		.uleb128 0x19
 1648 0052 03       		.uleb128 0x3
 1649 0053 0E       		.uleb128 0xe
 1650 0054 3A       		.uleb128 0x3a
 1651 0055 0B       		.uleb128 0xb
 1652 0056 3B       		.uleb128 0x3b
 1653 0057 0B       		.uleb128 0xb
 1654 0058 27       		.uleb128 0x27
 1655 0059 19       		.uleb128 0x19
 1656 005a 11       		.uleb128 0x11
 1657 005b 01       		.uleb128 0x1
 1658 005c 12       		.uleb128 0x12
 1659 005d 06       		.uleb128 0x6
 1660 005e 40       		.uleb128 0x40
 1661 005f 18       		.uleb128 0x18
 1662 0060 9742     		.uleb128 0x2117
 1663 0062 19       		.uleb128 0x19
 1664 0063 01       		.uleb128 0x1
 1665 0064 13       		.uleb128 0x13
 1666 0065 00       		.byte	0
 1667 0066 00       		.byte	0
 1668 0067 09       		.uleb128 0x9
 1669 0068 34       		.uleb128 0x34
 1670 0069 00       		.byte	0
 1671 006a 03       		.uleb128 0x3
 1672 006b 0E       		.uleb128 0xe
 1673 006c 3A       		.uleb128 0x3a
 1674 006d 0B       		.uleb128 0xb
 1675 006e 3B       		.uleb128 0x3b
 1676 006f 0B       		.uleb128 0xb
 1677 0070 49       		.uleb128 0x49
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 46


 1678 0071 13       		.uleb128 0x13
 1679 0072 02       		.uleb128 0x2
 1680 0073 17       		.uleb128 0x17
 1681 0074 00       		.byte	0
 1682 0075 00       		.byte	0
 1683 0076 0A       		.uleb128 0xa
 1684 0077 898201   		.uleb128 0x4109
 1685 007a 01       		.byte	0x1
 1686 007b 11       		.uleb128 0x11
 1687 007c 01       		.uleb128 0x1
 1688 007d 31       		.uleb128 0x31
 1689 007e 13       		.uleb128 0x13
 1690 007f 01       		.uleb128 0x1
 1691 0080 13       		.uleb128 0x13
 1692 0081 00       		.byte	0
 1693 0082 00       		.byte	0
 1694 0083 0B       		.uleb128 0xb
 1695 0084 8A8201   		.uleb128 0x410a
 1696 0087 00       		.byte	0
 1697 0088 02       		.uleb128 0x2
 1698 0089 18       		.uleb128 0x18
 1699 008a 9142     		.uleb128 0x2111
 1700 008c 18       		.uleb128 0x18
 1701 008d 00       		.byte	0
 1702 008e 00       		.byte	0
 1703 008f 0C       		.uleb128 0xc
 1704 0090 898201   		.uleb128 0x4109
 1705 0093 01       		.byte	0x1
 1706 0094 11       		.uleb128 0x11
 1707 0095 01       		.uleb128 0x1
 1708 0096 31       		.uleb128 0x31
 1709 0097 13       		.uleb128 0x13
 1710 0098 00       		.byte	0
 1711 0099 00       		.byte	0
 1712 009a 0D       		.uleb128 0xd
 1713 009b 2E       		.uleb128 0x2e
 1714 009c 01       		.byte	0x1
 1715 009d 3F       		.uleb128 0x3f
 1716 009e 19       		.uleb128 0x19
 1717 009f 03       		.uleb128 0x3
 1718 00a0 0E       		.uleb128 0xe
 1719 00a1 3A       		.uleb128 0x3a
 1720 00a2 0B       		.uleb128 0xb
 1721 00a3 3B       		.uleb128 0x3b
 1722 00a4 05       		.uleb128 0x5
 1723 00a5 27       		.uleb128 0x27
 1724 00a6 19       		.uleb128 0x19
 1725 00a7 11       		.uleb128 0x11
 1726 00a8 01       		.uleb128 0x1
 1727 00a9 12       		.uleb128 0x12
 1728 00aa 06       		.uleb128 0x6
 1729 00ab 40       		.uleb128 0x40
 1730 00ac 18       		.uleb128 0x18
 1731 00ad 9742     		.uleb128 0x2117
 1732 00af 19       		.uleb128 0x19
 1733 00b0 01       		.uleb128 0x1
 1734 00b1 13       		.uleb128 0x13
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 47


 1735 00b2 00       		.byte	0
 1736 00b3 00       		.byte	0
 1737 00b4 0E       		.uleb128 0xe
 1738 00b5 898201   		.uleb128 0x4109
 1739 00b8 00       		.byte	0
 1740 00b9 11       		.uleb128 0x11
 1741 00ba 01       		.uleb128 0x1
 1742 00bb 31       		.uleb128 0x31
 1743 00bc 13       		.uleb128 0x13
 1744 00bd 00       		.byte	0
 1745 00be 00       		.byte	0
 1746 00bf 0F       		.uleb128 0xf
 1747 00c0 2E       		.uleb128 0x2e
 1748 00c1 00       		.byte	0
 1749 00c2 3F       		.uleb128 0x3f
 1750 00c3 19       		.uleb128 0x19
 1751 00c4 03       		.uleb128 0x3
 1752 00c5 0E       		.uleb128 0xe
 1753 00c6 3A       		.uleb128 0x3a
 1754 00c7 0B       		.uleb128 0xb
 1755 00c8 3B       		.uleb128 0x3b
 1756 00c9 05       		.uleb128 0x5
 1757 00ca 27       		.uleb128 0x27
 1758 00cb 19       		.uleb128 0x19
 1759 00cc 11       		.uleb128 0x11
 1760 00cd 01       		.uleb128 0x1
 1761 00ce 12       		.uleb128 0x12
 1762 00cf 06       		.uleb128 0x6
 1763 00d0 40       		.uleb128 0x40
 1764 00d1 18       		.uleb128 0x18
 1765 00d2 9742     		.uleb128 0x2117
 1766 00d4 19       		.uleb128 0x19
 1767 00d5 00       		.byte	0
 1768 00d6 00       		.byte	0
 1769 00d7 10       		.uleb128 0x10
 1770 00d8 2E       		.uleb128 0x2e
 1771 00d9 01       		.byte	0x1
 1772 00da 3F       		.uleb128 0x3f
 1773 00db 19       		.uleb128 0x19
 1774 00dc 03       		.uleb128 0x3
 1775 00dd 0E       		.uleb128 0xe
 1776 00de 3A       		.uleb128 0x3a
 1777 00df 0B       		.uleb128 0xb
 1778 00e0 3B       		.uleb128 0x3b
 1779 00e1 05       		.uleb128 0x5
 1780 00e2 27       		.uleb128 0x27
 1781 00e3 19       		.uleb128 0x19
 1782 00e4 49       		.uleb128 0x49
 1783 00e5 13       		.uleb128 0x13
 1784 00e6 11       		.uleb128 0x11
 1785 00e7 01       		.uleb128 0x1
 1786 00e8 12       		.uleb128 0x12
 1787 00e9 06       		.uleb128 0x6
 1788 00ea 40       		.uleb128 0x40
 1789 00eb 18       		.uleb128 0x18
 1790 00ec 9742     		.uleb128 0x2117
 1791 00ee 19       		.uleb128 0x19
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 48


 1792 00ef 01       		.uleb128 0x1
 1793 00f0 13       		.uleb128 0x13
 1794 00f1 00       		.byte	0
 1795 00f2 00       		.byte	0
 1796 00f3 11       		.uleb128 0x11
 1797 00f4 05       		.uleb128 0x5
 1798 00f5 00       		.byte	0
 1799 00f6 03       		.uleb128 0x3
 1800 00f7 0E       		.uleb128 0xe
 1801 00f8 3A       		.uleb128 0x3a
 1802 00f9 0B       		.uleb128 0xb
 1803 00fa 3B       		.uleb128 0x3b
 1804 00fb 05       		.uleb128 0x5
 1805 00fc 49       		.uleb128 0x49
 1806 00fd 13       		.uleb128 0x13
 1807 00fe 02       		.uleb128 0x2
 1808 00ff 17       		.uleb128 0x17
 1809 0100 00       		.byte	0
 1810 0101 00       		.byte	0
 1811 0102 12       		.uleb128 0x12
 1812 0103 34       		.uleb128 0x34
 1813 0104 00       		.byte	0
 1814 0105 03       		.uleb128 0x3
 1815 0106 0E       		.uleb128 0xe
 1816 0107 3A       		.uleb128 0x3a
 1817 0108 0B       		.uleb128 0xb
 1818 0109 3B       		.uleb128 0x3b
 1819 010a 05       		.uleb128 0x5
 1820 010b 49       		.uleb128 0x49
 1821 010c 13       		.uleb128 0x13
 1822 010d 02       		.uleb128 0x2
 1823 010e 17       		.uleb128 0x17
 1824 010f 00       		.byte	0
 1825 0110 00       		.byte	0
 1826 0111 13       		.uleb128 0x13
 1827 0112 2E       		.uleb128 0x2e
 1828 0113 01       		.byte	0x1
 1829 0114 3F       		.uleb128 0x3f
 1830 0115 19       		.uleb128 0x19
 1831 0116 03       		.uleb128 0x3
 1832 0117 0E       		.uleb128 0xe
 1833 0118 3A       		.uleb128 0x3a
 1834 0119 0B       		.uleb128 0xb
 1835 011a 3B       		.uleb128 0x3b
 1836 011b 05       		.uleb128 0x5
 1837 011c 27       		.uleb128 0x27
 1838 011d 19       		.uleb128 0x19
 1839 011e 49       		.uleb128 0x49
 1840 011f 13       		.uleb128 0x13
 1841 0120 11       		.uleb128 0x11
 1842 0121 01       		.uleb128 0x1
 1843 0122 12       		.uleb128 0x12
 1844 0123 06       		.uleb128 0x6
 1845 0124 40       		.uleb128 0x40
 1846 0125 18       		.uleb128 0x18
 1847 0126 9642     		.uleb128 0x2116
 1848 0128 19       		.uleb128 0x19
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 49


 1849 0129 01       		.uleb128 0x1
 1850 012a 13       		.uleb128 0x13
 1851 012b 00       		.byte	0
 1852 012c 00       		.byte	0
 1853 012d 14       		.uleb128 0x14
 1854 012e 34       		.uleb128 0x34
 1855 012f 00       		.byte	0
 1856 0130 03       		.uleb128 0x3
 1857 0131 0E       		.uleb128 0xe
 1858 0132 3A       		.uleb128 0x3a
 1859 0133 0B       		.uleb128 0xb
 1860 0134 3B       		.uleb128 0x3b
 1861 0135 05       		.uleb128 0x5
 1862 0136 49       		.uleb128 0x49
 1863 0137 13       		.uleb128 0x13
 1864 0138 02       		.uleb128 0x2
 1865 0139 18       		.uleb128 0x18
 1866 013a 00       		.byte	0
 1867 013b 00       		.byte	0
 1868 013c 15       		.uleb128 0x15
 1869 013d 34       		.uleb128 0x34
 1870 013e 00       		.byte	0
 1871 013f 03       		.uleb128 0x3
 1872 0140 0E       		.uleb128 0xe
 1873 0141 3A       		.uleb128 0x3a
 1874 0142 0B       		.uleb128 0xb
 1875 0143 3B       		.uleb128 0x3b
 1876 0144 05       		.uleb128 0x5
 1877 0145 49       		.uleb128 0x49
 1878 0146 13       		.uleb128 0x13
 1879 0147 00       		.byte	0
 1880 0148 00       		.byte	0
 1881 0149 16       		.uleb128 0x16
 1882 014a 01       		.uleb128 0x1
 1883 014b 01       		.byte	0x1
 1884 014c 49       		.uleb128 0x49
 1885 014d 13       		.uleb128 0x13
 1886 014e 01       		.uleb128 0x1
 1887 014f 13       		.uleb128 0x13
 1888 0150 00       		.byte	0
 1889 0151 00       		.byte	0
 1890 0152 17       		.uleb128 0x17
 1891 0153 21       		.uleb128 0x21
 1892 0154 00       		.byte	0
 1893 0155 49       		.uleb128 0x49
 1894 0156 13       		.uleb128 0x13
 1895 0157 2F       		.uleb128 0x2f
 1896 0158 0B       		.uleb128 0xb
 1897 0159 00       		.byte	0
 1898 015a 00       		.byte	0
 1899 015b 18       		.uleb128 0x18
 1900 015c 34       		.uleb128 0x34
 1901 015d 00       		.byte	0
 1902 015e 03       		.uleb128 0x3
 1903 015f 0E       		.uleb128 0xe
 1904 0160 3A       		.uleb128 0x3a
 1905 0161 0B       		.uleb128 0xb
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 50


 1906 0162 3B       		.uleb128 0x3b
 1907 0163 0B       		.uleb128 0xb
 1908 0164 49       		.uleb128 0x49
 1909 0165 13       		.uleb128 0x13
 1910 0166 1C       		.uleb128 0x1c
 1911 0167 0A       		.uleb128 0xa
 1912 0168 00       		.byte	0
 1913 0169 00       		.byte	0
 1914 016a 19       		.uleb128 0x19
 1915 016b 26       		.uleb128 0x26
 1916 016c 00       		.byte	0
 1917 016d 49       		.uleb128 0x49
 1918 016e 13       		.uleb128 0x13
 1919 016f 00       		.byte	0
 1920 0170 00       		.byte	0
 1921 0171 1A       		.uleb128 0x1a
 1922 0172 34       		.uleb128 0x34
 1923 0173 00       		.byte	0
 1924 0174 03       		.uleb128 0x3
 1925 0175 0E       		.uleb128 0xe
 1926 0176 3A       		.uleb128 0x3a
 1927 0177 0B       		.uleb128 0xb
 1928 0178 3B       		.uleb128 0x3b
 1929 0179 0B       		.uleb128 0xb
 1930 017a 49       		.uleb128 0x49
 1931 017b 13       		.uleb128 0x13
 1932 017c 3F       		.uleb128 0x3f
 1933 017d 19       		.uleb128 0x19
 1934 017e 02       		.uleb128 0x2
 1935 017f 18       		.uleb128 0x18
 1936 0180 00       		.byte	0
 1937 0181 00       		.byte	0
 1938 0182 1B       		.uleb128 0x1b
 1939 0183 2E       		.uleb128 0x2e
 1940 0184 01       		.byte	0x1
 1941 0185 3F       		.uleb128 0x3f
 1942 0186 19       		.uleb128 0x19
 1943 0187 03       		.uleb128 0x3
 1944 0188 0E       		.uleb128 0xe
 1945 0189 3A       		.uleb128 0x3a
 1946 018a 0B       		.uleb128 0xb
 1947 018b 3B       		.uleb128 0x3b
 1948 018c 0B       		.uleb128 0xb
 1949 018d 27       		.uleb128 0x27
 1950 018e 19       		.uleb128 0x19
 1951 018f 3C       		.uleb128 0x3c
 1952 0190 19       		.uleb128 0x19
 1953 0191 01       		.uleb128 0x1
 1954 0192 13       		.uleb128 0x13
 1955 0193 00       		.byte	0
 1956 0194 00       		.byte	0
 1957 0195 1C       		.uleb128 0x1c
 1958 0196 05       		.uleb128 0x5
 1959 0197 00       		.byte	0
 1960 0198 49       		.uleb128 0x49
 1961 0199 13       		.uleb128 0x13
 1962 019a 00       		.byte	0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 51


 1963 019b 00       		.byte	0
 1964 019c 1D       		.uleb128 0x1d
 1965 019d 2E       		.uleb128 0x2e
 1966 019e 01       		.byte	0x1
 1967 019f 3F       		.uleb128 0x3f
 1968 01a0 19       		.uleb128 0x19
 1969 01a1 03       		.uleb128 0x3
 1970 01a2 0E       		.uleb128 0xe
 1971 01a3 3A       		.uleb128 0x3a
 1972 01a4 0B       		.uleb128 0xb
 1973 01a5 3B       		.uleb128 0x3b
 1974 01a6 0B       		.uleb128 0xb
 1975 01a7 27       		.uleb128 0x27
 1976 01a8 19       		.uleb128 0x19
 1977 01a9 49       		.uleb128 0x49
 1978 01aa 13       		.uleb128 0x13
 1979 01ab 3C       		.uleb128 0x3c
 1980 01ac 19       		.uleb128 0x19
 1981 01ad 01       		.uleb128 0x1
 1982 01ae 13       		.uleb128 0x13
 1983 01af 00       		.byte	0
 1984 01b0 00       		.byte	0
 1985 01b1 1E       		.uleb128 0x1e
 1986 01b2 2E       		.uleb128 0x2e
 1987 01b3 01       		.byte	0x1
 1988 01b4 3F       		.uleb128 0x3f
 1989 01b5 19       		.uleb128 0x19
 1990 01b6 03       		.uleb128 0x3
 1991 01b7 0E       		.uleb128 0xe
 1992 01b8 3A       		.uleb128 0x3a
 1993 01b9 0B       		.uleb128 0xb
 1994 01ba 3B       		.uleb128 0x3b
 1995 01bb 0B       		.uleb128 0xb
 1996 01bc 27       		.uleb128 0x27
 1997 01bd 19       		.uleb128 0x19
 1998 01be 3C       		.uleb128 0x3c
 1999 01bf 19       		.uleb128 0x19
 2000 01c0 00       		.byte	0
 2001 01c1 00       		.byte	0
 2002 01c2 00       		.byte	0
 2003              		.section	.debug_loc,"",%progbits
 2004              	.Ldebug_loc0:
 2005              	.LLST0:
 2006 0000 74000000 		.4byte	.LVL5
 2007 0004 78000000 		.4byte	.LVL7
 2008 0008 0200     		.2byte	0x2
 2009 000a 30       		.byte	0x30
 2010 000b 9F       		.byte	0x9f
 2011 000c 78000000 		.4byte	.LVL7
 2012 0010 00010000 		.4byte	.LFE3
 2013 0014 0100     		.2byte	0x1
 2014 0016 53       		.byte	0x53
 2015 0017 00000000 		.4byte	0
 2016 001b 00000000 		.4byte	0
 2017              	.LLST1:
 2018 001f 68000000 		.4byte	.LVL2
 2019 0023 6E000000 		.4byte	.LVL3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 52


 2020 0027 0700     		.2byte	0x7
 2021 0029 71       		.byte	0x71
 2022 002a 00       		.sleb128 0
 2023 002b 40       		.byte	0x40
 2024 002c 49       		.byte	0x49
 2025 002d 24       		.byte	0x24
 2026 002e 21       		.byte	0x21
 2027 002f 9F       		.byte	0x9f
 2028 0030 72000000 		.4byte	.LVL4
 2029 0034 76000000 		.4byte	.LVL6
 2030 0038 0100     		.2byte	0x1
 2031 003a 53       		.byte	0x53
 2032 003b 76000000 		.4byte	.LVL6
 2033 003f 78000000 		.4byte	.LVL7
 2034 0043 0200     		.2byte	0x2
 2035 0045 72       		.byte	0x72
 2036 0046 00       		.sleb128 0
 2037 0047 78000000 		.4byte	.LVL7
 2038 004b 98000000 		.4byte	.LVL9
 2039 004f 0400     		.2byte	0x4
 2040 0051 0A       		.byte	0xa
 2041 0052 0004     		.2byte	0x400
 2042 0054 9F       		.byte	0x9f
 2043 0055 00000000 		.4byte	0
 2044 0059 00000000 		.4byte	0
 2045              	.LLST2:
 2046 005d 86000000 		.4byte	.LVL8
 2047 0061 98000000 		.4byte	.LVL9
 2048 0065 0400     		.2byte	0x4
 2049 0067 0A       		.byte	0xa
 2050 0068 0010     		.2byte	0x1000
 2051 006a 9F       		.byte	0x9f
 2052 006b 00000000 		.4byte	0
 2053 006f 00000000 		.4byte	0
 2054              	.LLST3:
 2055 0073 00000000 		.4byte	.LVL13
 2056 0077 06000000 		.4byte	.LVL15
 2057 007b 0100     		.2byte	0x1
 2058 007d 50       		.byte	0x50
 2059 007e 06000000 		.4byte	.LVL15
 2060 0082 1A000000 		.4byte	.LVL17
 2061 0086 0100     		.2byte	0x1
 2062 0088 52       		.byte	0x52
 2063 0089 1A000000 		.4byte	.LVL17
 2064 008d 20000000 		.4byte	.LVL18
 2065 0091 0400     		.2byte	0x4
 2066 0093 F3       		.byte	0xf3
 2067 0094 01       		.uleb128 0x1
 2068 0095 50       		.byte	0x50
 2069 0096 9F       		.byte	0x9f
 2070 0097 20000000 		.4byte	.LVL18
 2071 009b 22000000 		.4byte	.LVL19
 2072 009f 0100     		.2byte	0x1
 2073 00a1 50       		.byte	0x50
 2074 00a2 22000000 		.4byte	.LVL19
 2075 00a6 28000000 		.4byte	.LFE8
 2076 00aa 0400     		.2byte	0x4
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 53


 2077 00ac F3       		.byte	0xf3
 2078 00ad 01       		.uleb128 0x1
 2079 00ae 50       		.byte	0x50
 2080 00af 9F       		.byte	0x9f
 2081 00b0 00000000 		.4byte	0
 2082 00b4 00000000 		.4byte	0
 2083              	.LLST4:
 2084 00b8 02000000 		.4byte	.LVL14
 2085 00bc 06000000 		.4byte	.LVL15
 2086 00c0 0200     		.2byte	0x2
 2087 00c2 30       		.byte	0x30
 2088 00c3 9F       		.byte	0x9f
 2089 00c4 0E000000 		.4byte	.LVL16
 2090 00c8 20000000 		.4byte	.LVL18
 2091 00cc 0100     		.2byte	0x1
 2092 00ce 50       		.byte	0x50
 2093 00cf 20000000 		.4byte	.LVL18
 2094 00d3 22000000 		.4byte	.LVL19
 2095 00d7 0200     		.2byte	0x2
 2096 00d9 30       		.byte	0x30
 2097 00da 9F       		.byte	0x9f
 2098 00db 22000000 		.4byte	.LVL19
 2099 00df 28000000 		.4byte	.LFE8
 2100 00e3 0100     		.2byte	0x1
 2101 00e5 50       		.byte	0x50
 2102 00e6 00000000 		.4byte	0
 2103 00ea 00000000 		.4byte	0
 2104              	.LLST5:
 2105 00ee 00000000 		.4byte	.LVL20
 2106 00f2 08000000 		.4byte	.LVL21
 2107 00f6 0100     		.2byte	0x1
 2108 00f8 50       		.byte	0x50
 2109 00f9 08000000 		.4byte	.LVL21
 2110 00fd 12000000 		.4byte	.LVL23
 2111 0101 0100     		.2byte	0x1
 2112 0103 54       		.byte	0x54
 2113 0104 12000000 		.4byte	.LVL23
 2114 0108 20000000 		.4byte	.LVL25
 2115 010c 0400     		.2byte	0x4
 2116 010e F3       		.byte	0xf3
 2117 010f 01       		.uleb128 0x1
 2118 0110 50       		.byte	0x50
 2119 0111 9F       		.byte	0x9f
 2120 0112 20000000 		.4byte	.LVL25
 2121 0116 22000000 		.4byte	.LVL26
 2122 011a 0100     		.2byte	0x1
 2123 011c 54       		.byte	0x54
 2124 011d 22000000 		.4byte	.LVL26
 2125 0121 2C000000 		.4byte	.LFE9
 2126 0125 0400     		.2byte	0x4
 2127 0127 F3       		.byte	0xf3
 2128 0128 01       		.uleb128 0x1
 2129 0129 50       		.byte	0x50
 2130 012a 9F       		.byte	0x9f
 2131 012b 00000000 		.4byte	0
 2132 012f 00000000 		.4byte	0
 2133              	.LLST6:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 54


 2134 0133 1E000000 		.4byte	.LVL24
 2135 0137 20000000 		.4byte	.LVL25
 2136 013b 0100     		.2byte	0x1
 2137 013d 50       		.byte	0x50
 2138 013e 22000000 		.4byte	.LVL26
 2139 0142 24000000 		.4byte	.LVL27
 2140 0146 0100     		.2byte	0x1
 2141 0148 50       		.byte	0x50
 2142 0149 00000000 		.4byte	0
 2143 014d 00000000 		.4byte	0
 2144              	.LLST7:
 2145 0151 00000000 		.4byte	.LVL28
 2146 0155 04000000 		.4byte	.LVL29
 2147 0159 0100     		.2byte	0x1
 2148 015b 50       		.byte	0x50
 2149 015c 04000000 		.4byte	.LVL29
 2150 0160 10000000 		.4byte	.LFE10
 2151 0164 0400     		.2byte	0x4
 2152 0166 F3       		.byte	0xf3
 2153 0167 01       		.uleb128 0x1
 2154 0168 50       		.byte	0x50
 2155 0169 9F       		.byte	0x9f
 2156 016a 00000000 		.4byte	0
 2157 016e 00000000 		.4byte	0
 2158              	.LLST8:
 2159 0172 00000000 		.4byte	.LVL30
 2160 0176 0E000000 		.4byte	.LVL31
 2161 017a 0100     		.2byte	0x1
 2162 017c 50       		.byte	0x50
 2163 017d 0E000000 		.4byte	.LVL31
 2164 0181 1C000000 		.4byte	.LFE11
 2165 0185 0400     		.2byte	0x4
 2166 0187 F3       		.byte	0xf3
 2167 0188 01       		.uleb128 0x1
 2168 0189 50       		.byte	0x50
 2169 018a 9F       		.byte	0x9f
 2170 018b 00000000 		.4byte	0
 2171 018f 00000000 		.4byte	0
 2172              	.LLST9:
 2173 0193 00000000 		.4byte	.LVL32
 2174 0197 0E000000 		.4byte	.LVL33
 2175 019b 0100     		.2byte	0x1
 2176 019d 50       		.byte	0x50
 2177 019e 0E000000 		.4byte	.LVL33
 2178 01a2 18000000 		.4byte	.LFE12
 2179 01a6 0400     		.2byte	0x4
 2180 01a8 F3       		.byte	0xf3
 2181 01a9 01       		.uleb128 0x1
 2182 01aa 50       		.byte	0x50
 2183 01ab 9F       		.byte	0x9f
 2184 01ac 00000000 		.4byte	0
 2185 01b0 00000000 		.4byte	0
 2186              	.LLST10:
 2187 01b4 00000000 		.4byte	.LVL34
 2188 01b8 04000000 		.4byte	.LVL35
 2189 01bc 0100     		.2byte	0x1
 2190 01be 50       		.byte	0x50
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 55


 2191 01bf 04000000 		.4byte	.LVL35
 2192 01c3 10000000 		.4byte	.LFE13
 2193 01c7 0400     		.2byte	0x4
 2194 01c9 F3       		.byte	0xf3
 2195 01ca 01       		.uleb128 0x1
 2196 01cb 50       		.byte	0x50
 2197 01cc 9F       		.byte	0x9f
 2198 01cd 00000000 		.4byte	0
 2199 01d1 00000000 		.4byte	0
 2200              	.LLST11:
 2201 01d5 00000000 		.4byte	.LVL36
 2202 01d9 04000000 		.4byte	.LVL37
 2203 01dd 0100     		.2byte	0x1
 2204 01df 50       		.byte	0x50
 2205 01e0 04000000 		.4byte	.LVL37
 2206 01e4 10000000 		.4byte	.LFE14
 2207 01e8 0400     		.2byte	0x4
 2208 01ea F3       		.byte	0xf3
 2209 01eb 01       		.uleb128 0x1
 2210 01ec 50       		.byte	0x50
 2211 01ed 9F       		.byte	0x9f
 2212 01ee 00000000 		.4byte	0
 2213 01f2 00000000 		.4byte	0
 2214              	.LLST12:
 2215 01f6 00000000 		.4byte	.LVL38
 2216 01fa 0C000000 		.4byte	.LVL39
 2217 01fe 0100     		.2byte	0x1
 2218 0200 50       		.byte	0x50
 2219 0201 0C000000 		.4byte	.LVL39
 2220 0205 12000000 		.4byte	.LVL41
 2221 0209 0100     		.2byte	0x1
 2222 020b 54       		.byte	0x54
 2223 020c 12000000 		.4byte	.LVL41
 2224 0210 1C000000 		.4byte	.LFE15
 2225 0214 0400     		.2byte	0x4
 2226 0216 F3       		.byte	0xf3
 2227 0217 01       		.uleb128 0x1
 2228 0218 50       		.byte	0x50
 2229 0219 9F       		.byte	0x9f
 2230 021a 00000000 		.4byte	0
 2231 021e 00000000 		.4byte	0
 2232              	.LLST13:
 2233 0222 00000000 		.4byte	.LVL38
 2234 0226 0F000000 		.4byte	.LVL40-1
 2235 022a 0100     		.2byte	0x1
 2236 022c 51       		.byte	0x51
 2237 022d 0F000000 		.4byte	.LVL40-1
 2238 0231 1C000000 		.4byte	.LFE15
 2239 0235 0400     		.2byte	0x4
 2240 0237 F3       		.byte	0xf3
 2241 0238 01       		.uleb128 0x1
 2242 0239 51       		.byte	0x51
 2243 023a 9F       		.byte	0x9f
 2244 023b 00000000 		.4byte	0
 2245 023f 00000000 		.4byte	0
 2246              	.LLST14:
 2247 0243 00000000 		.4byte	.LVL42
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 56


 2248 0247 0C000000 		.4byte	.LVL43
 2249 024b 0100     		.2byte	0x1
 2250 024d 50       		.byte	0x50
 2251 024e 0C000000 		.4byte	.LVL43
 2252 0252 12000000 		.4byte	.LVL45
 2253 0256 0100     		.2byte	0x1
 2254 0258 54       		.byte	0x54
 2255 0259 12000000 		.4byte	.LVL45
 2256 025d 1C000000 		.4byte	.LFE16
 2257 0261 0400     		.2byte	0x4
 2258 0263 F3       		.byte	0xf3
 2259 0264 01       		.uleb128 0x1
 2260 0265 50       		.byte	0x50
 2261 0266 9F       		.byte	0x9f
 2262 0267 00000000 		.4byte	0
 2263 026b 00000000 		.4byte	0
 2264              	.LLST15:
 2265 026f 00000000 		.4byte	.LVL42
 2266 0273 0F000000 		.4byte	.LVL44-1
 2267 0277 0100     		.2byte	0x1
 2268 0279 51       		.byte	0x51
 2269 027a 0F000000 		.4byte	.LVL44-1
 2270 027e 16000000 		.4byte	.LVL46
 2271 0282 0100     		.2byte	0x1
 2272 0284 55       		.byte	0x55
 2273 0285 16000000 		.4byte	.LVL46
 2274 0289 1C000000 		.4byte	.LFE16
 2275 028d 0800     		.2byte	0x8
 2276 028f F3       		.byte	0xf3
 2277 0290 01       		.uleb128 0x1
 2278 0291 50       		.byte	0x50
 2279 0292 32       		.byte	0x32
 2280 0293 24       		.byte	0x24
 2281 0294 73       		.byte	0x73
 2282 0295 00       		.sleb128 0
 2283 0296 22       		.byte	0x22
 2284 0297 00000000 		.4byte	0
 2285 029b 00000000 		.4byte	0
 2286              	.LLST16:
 2287 029f 00000000 		.4byte	.LVL47
 2288 02a3 0C000000 		.4byte	.LVL48
 2289 02a7 0100     		.2byte	0x1
 2290 02a9 50       		.byte	0x50
 2291 02aa 0C000000 		.4byte	.LVL48
 2292 02ae 44000000 		.4byte	.LVL54
 2293 02b2 0100     		.2byte	0x1
 2294 02b4 54       		.byte	0x54
 2295 02b5 44000000 		.4byte	.LVL54
 2296 02b9 5C000000 		.4byte	.LFE17
 2297 02bd 0400     		.2byte	0x4
 2298 02bf F3       		.byte	0xf3
 2299 02c0 01       		.uleb128 0x1
 2300 02c1 50       		.byte	0x50
 2301 02c2 9F       		.byte	0x9f
 2302 02c3 00000000 		.4byte	0
 2303 02c7 00000000 		.4byte	0
 2304              	.LLST17:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 57


 2305 02cb 00000000 		.4byte	.LVL47
 2306 02cf 0F000000 		.4byte	.LVL49-1
 2307 02d3 0100     		.2byte	0x1
 2308 02d5 51       		.byte	0x51
 2309 02d6 0F000000 		.4byte	.LVL49-1
 2310 02da 1A000000 		.4byte	.LVL50
 2311 02de 0400     		.2byte	0x4
 2312 02e0 F3       		.byte	0xf3
 2313 02e1 01       		.uleb128 0x1
 2314 02e2 51       		.byte	0x51
 2315 02e3 9F       		.byte	0x9f
 2316 02e4 1A000000 		.4byte	.LVL50
 2317 02e8 28000000 		.4byte	.LVL51
 2318 02ec 0100     		.2byte	0x1
 2319 02ee 51       		.byte	0x51
 2320 02ef 32000000 		.4byte	.LVL52
 2321 02f3 36000000 		.4byte	.LVL53
 2322 02f7 0100     		.2byte	0x1
 2323 02f9 51       		.byte	0x51
 2324 02fa 00000000 		.4byte	0
 2325 02fe 00000000 		.4byte	0
 2326              	.LLST18:
 2327 0302 00000000 		.4byte	.LVL56
 2328 0306 0C000000 		.4byte	.LVL57
 2329 030a 0100     		.2byte	0x1
 2330 030c 50       		.byte	0x50
 2331 030d 0C000000 		.4byte	.LVL57
 2332 0311 26000000 		.4byte	.LVL61
 2333 0315 0100     		.2byte	0x1
 2334 0317 55       		.byte	0x55
 2335 0318 26000000 		.4byte	.LVL61
 2336 031c 40000000 		.4byte	.LFE18
 2337 0320 0400     		.2byte	0x4
 2338 0322 F3       		.byte	0xf3
 2339 0323 01       		.uleb128 0x1
 2340 0324 50       		.byte	0x50
 2341 0325 9F       		.byte	0x9f
 2342 0326 00000000 		.4byte	0
 2343 032a 00000000 		.4byte	0
 2344              	.LLST19:
 2345 032e 00000000 		.4byte	.LVL56
 2346 0332 0F000000 		.4byte	.LVL58-1
 2347 0336 0100     		.2byte	0x1
 2348 0338 51       		.byte	0x51
 2349 0339 0F000000 		.4byte	.LVL58-1
 2350 033d 1A000000 		.4byte	.LVL59
 2351 0341 0400     		.2byte	0x4
 2352 0343 F3       		.byte	0xf3
 2353 0344 01       		.uleb128 0x1
 2354 0345 51       		.byte	0x51
 2355 0346 9F       		.byte	0x9f
 2356 0347 1A000000 		.4byte	.LVL59
 2357 034b 23000000 		.4byte	.LVL60-1
 2358 034f 0100     		.2byte	0x1
 2359 0351 50       		.byte	0x50
 2360 0352 00000000 		.4byte	0
 2361 0356 00000000 		.4byte	0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 58


 2362              	.LLST20:
 2363 035a 00000000 		.4byte	.LVL63
 2364 035e 0C000000 		.4byte	.LVL64
 2365 0362 0100     		.2byte	0x1
 2366 0364 50       		.byte	0x50
 2367 0365 0C000000 		.4byte	.LVL64
 2368 0369 28000000 		.4byte	.LVL69
 2369 036d 0100     		.2byte	0x1
 2370 036f 54       		.byte	0x54
 2371 0370 28000000 		.4byte	.LVL69
 2372 0374 48000000 		.4byte	.LFE19
 2373 0378 0400     		.2byte	0x4
 2374 037a F3       		.byte	0xf3
 2375 037b 01       		.uleb128 0x1
 2376 037c 50       		.byte	0x50
 2377 037d 9F       		.byte	0x9f
 2378 037e 00000000 		.4byte	0
 2379 0382 00000000 		.4byte	0
 2380              	.LLST21:
 2381 0386 00000000 		.4byte	.LVL63
 2382 038a 0F000000 		.4byte	.LVL65-1
 2383 038e 0100     		.2byte	0x1
 2384 0390 51       		.byte	0x51
 2385 0391 0F000000 		.4byte	.LVL65-1
 2386 0395 1A000000 		.4byte	.LVL66
 2387 0399 0400     		.2byte	0x4
 2388 039b F3       		.byte	0xf3
 2389 039c 01       		.uleb128 0x1
 2390 039d 51       		.byte	0x51
 2391 039e 9F       		.byte	0x9f
 2392 039f 1A000000 		.4byte	.LVL66
 2393 03a3 1D000000 		.4byte	.LVL67-1
 2394 03a7 0100     		.2byte	0x1
 2395 03a9 50       		.byte	0x50
 2396 03aa 00000000 		.4byte	0
 2397 03ae 00000000 		.4byte	0
 2398              		.section	.debug_aranges,"",%progbits
 2399 0000 A4000000 		.4byte	0xa4
 2400 0004 0200     		.2byte	0x2
 2401 0006 00000000 		.4byte	.Ldebug_info0
 2402 000a 04       		.byte	0x4
 2403 000b 00       		.byte	0
 2404 000c 0000     		.2byte	0
 2405 000e 0000     		.2byte	0
 2406 0010 00000000 		.4byte	.LFB3
 2407 0014 00010000 		.4byte	.LFE3-.LFB3
 2408 0018 00000000 		.4byte	.LFB4
 2409 001c 30000000 		.4byte	.LFE4-.LFB4
 2410 0020 00000000 		.4byte	.LFB2
 2411 0024 20000000 		.4byte	.LFE2-.LFB2
 2412 0028 00000000 		.4byte	.LFB5
 2413 002c 10000000 		.4byte	.LFE5-.LFB5
 2414 0030 00000000 		.4byte	.LFB6
 2415 0034 14000000 		.4byte	.LFE6-.LFB6
 2416 0038 00000000 		.4byte	.LFB7
 2417 003c 14000000 		.4byte	.LFE7-.LFB7
 2418 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 59


 2419 0044 28000000 		.4byte	.LFE8-.LFB8
 2420 0048 00000000 		.4byte	.LFB9
 2421 004c 2C000000 		.4byte	.LFE9-.LFB9
 2422 0050 00000000 		.4byte	.LFB10
 2423 0054 10000000 		.4byte	.LFE10-.LFB10
 2424 0058 00000000 		.4byte	.LFB11
 2425 005c 1C000000 		.4byte	.LFE11-.LFB11
 2426 0060 00000000 		.4byte	.LFB12
 2427 0064 18000000 		.4byte	.LFE12-.LFB12
 2428 0068 00000000 		.4byte	.LFB13
 2429 006c 10000000 		.4byte	.LFE13-.LFB13
 2430 0070 00000000 		.4byte	.LFB14
 2431 0074 10000000 		.4byte	.LFE14-.LFB14
 2432 0078 00000000 		.4byte	.LFB15
 2433 007c 1C000000 		.4byte	.LFE15-.LFB15
 2434 0080 00000000 		.4byte	.LFB16
 2435 0084 1C000000 		.4byte	.LFE16-.LFB16
 2436 0088 00000000 		.4byte	.LFB17
 2437 008c 5C000000 		.4byte	.LFE17-.LFB17
 2438 0090 00000000 		.4byte	.LFB18
 2439 0094 40000000 		.4byte	.LFE18-.LFB18
 2440 0098 00000000 		.4byte	.LFB19
 2441 009c 48000000 		.4byte	.LFE19-.LFB19
 2442 00a0 00000000 		.4byte	0
 2443 00a4 00000000 		.4byte	0
 2444              		.section	.debug_ranges,"",%progbits
 2445              	.Ldebug_ranges0:
 2446 0000 00000000 		.4byte	.LFB3
 2447 0004 00010000 		.4byte	.LFE3
 2448 0008 00000000 		.4byte	.LFB4
 2449 000c 30000000 		.4byte	.LFE4
 2450 0010 00000000 		.4byte	.LFB2
 2451 0014 20000000 		.4byte	.LFE2
 2452 0018 00000000 		.4byte	.LFB5
 2453 001c 10000000 		.4byte	.LFE5
 2454 0020 00000000 		.4byte	.LFB6
 2455 0024 14000000 		.4byte	.LFE6
 2456 0028 00000000 		.4byte	.LFB7
 2457 002c 14000000 		.4byte	.LFE7
 2458 0030 00000000 		.4byte	.LFB8
 2459 0034 28000000 		.4byte	.LFE8
 2460 0038 00000000 		.4byte	.LFB9
 2461 003c 2C000000 		.4byte	.LFE9
 2462 0040 00000000 		.4byte	.LFB10
 2463 0044 10000000 		.4byte	.LFE10
 2464 0048 00000000 		.4byte	.LFB11
 2465 004c 1C000000 		.4byte	.LFE11
 2466 0050 00000000 		.4byte	.LFB12
 2467 0054 18000000 		.4byte	.LFE12
 2468 0058 00000000 		.4byte	.LFB13
 2469 005c 10000000 		.4byte	.LFE13
 2470 0060 00000000 		.4byte	.LFB14
 2471 0064 10000000 		.4byte	.LFE14
 2472 0068 00000000 		.4byte	.LFB15
 2473 006c 1C000000 		.4byte	.LFE15
 2474 0070 00000000 		.4byte	.LFB16
 2475 0074 1C000000 		.4byte	.LFE16
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 60


 2476 0078 00000000 		.4byte	.LFB17
 2477 007c 5C000000 		.4byte	.LFE17
 2478 0080 00000000 		.4byte	.LFB18
 2479 0084 40000000 		.4byte	.LFE18
 2480 0088 00000000 		.4byte	.LFB19
 2481 008c 48000000 		.4byte	.LFE19
 2482 0090 00000000 		.4byte	0
 2483 0094 00000000 		.4byte	0
 2484              		.section	.debug_line,"",%progbits
 2485              	.Ldebug_line0:
 2486 0000 76020000 		.section	.debug_str,"MS",%progbits,1
 2486      02005500 
 2486      00000201 
 2486      FB0E0D00 
 2486      01010101 
 2487              	.LASF57:
 2488 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2488      5341525F 
 2488      5365715F 
 2488      315F6F66 
 2488      66736574 
 2489              	.LASF10:
 2490 0015 75696E74 		.ascii	"uint16\000"
 2490      313600
 2491              	.LASF25:
 2492 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2492      5341525F 
 2492      5365715F 
 2492      315F496E 
 2492      697400
 2493              	.LASF48:
 2494 002f 61646347 		.ascii	"adcGain\000"
 2494      61696E00 
 2495              	.LASF24:
 2496 0037 636F756E 		.ascii	"counts\000"
 2496      747300
 2497              	.LASF29:
 2498 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2498      5341525F 
 2498      5365715F 
 2498      315F5374 
 2498      61727443 
 2499              	.LASF44:
 2500 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2500      5341525F 
 2500      5365715F 
 2500      315F5365 
 2500      74536174 
 2501              	.LASF27:
 2502 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2502      5341525F 
 2502      5365715F 
 2502      315F5374 
 2502      61727400 
 2503              	.LASF7:
 2504 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2504      206C6F6E 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 61


 2504      6720756E 
 2504      7369676E 
 2504      65642069 
 2505              	.LASF26:
 2506 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2506      5341525F 
 2506      5365715F 
 2506      315F456E 
 2506      61626C65 
 2507              	.LASF33:
 2508 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2508      5341525F 
 2508      5365715F 
 2508      315F4765 
 2508      74526573 
 2509              	.LASF6:
 2510 00cc 6C6F6E67 		.ascii	"long long int\000"
 2510      206C6F6E 
 2510      6720696E 
 2510      7400
 2511              	.LASF0:
 2512 00da 7369676E 		.ascii	"signed char\000"
 2512      65642063 
 2512      68617200 
 2513              	.LASF41:
 2514 00e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2514      5341525F 
 2514      5365715F 
 2514      315F5365 
 2514      74486967 
 2515              	.LASF13:
 2516 0101 696E7433 		.ascii	"int32\000"
 2516      3200
 2517              	.LASF52:
 2518 0107 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2518      5341525F 
 2518      5365715F 
 2518      315F436F 
 2518      756E7473 
 2519              	.LASF4:
 2520 0125 6C6F6E67 		.ascii	"long int\000"
 2520      20696E74 
 2520      00
 2521              	.LASF9:
 2522 012e 75696E74 		.ascii	"uint8\000"
 2522      3800
 2523              	.LASF60:
 2524 0134 43794465 		.ascii	"CyDelayUs\000"
 2524      6C617955 
 2524      7300
 2525              	.LASF16:
 2526 013e 646F7562 		.ascii	"double\000"
 2526      6C6500
 2527              	.LASF11:
 2528 0145 75696E74 		.ascii	"uint32\000"
 2528      333200
 2529              	.LASF38:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 62


 2530 014c 6D61736B 		.ascii	"mask\000"
 2530      00
 2531              	.LASF49:
 2532 0151 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2532      5341525F 
 2532      5365715F 
 2532      315F436F 
 2532      756E7473 
 2533              	.LASF34:
 2534 016f 7265744D 		.ascii	"retMode\000"
 2534      6F646500 
 2535              	.LASF56:
 2536 0177 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2536      5341525F 
 2536      5365715F 
 2536      315F696E 
 2536      69745661 
 2537              	.LASF8:
 2538 018d 756E7369 		.ascii	"unsigned int\000"
 2538      676E6564 
 2538      20696E74 
 2538      00
 2539              	.LASF64:
 2540 019a 75566F6C 		.ascii	"uVolts\000"
 2540      747300
 2541              	.LASF5:
 2542 01a1 6C6F6E67 		.ascii	"long unsigned int\000"
 2542      20756E73 
 2542      69676E65 
 2542      6420696E 
 2542      7400
 2543              	.LASF54:
 2544 01b3 766F6C74 		.ascii	"volts\000"
 2544      7300
 2545              	.LASF23:
 2546 01b9 746D7052 		.ascii	"tmpRegVal\000"
 2546      65675661 
 2546      6C00
 2547              	.LASF3:
 2548 01c3 73686F72 		.ascii	"short unsigned int\000"
 2548      7420756E 
 2548      7369676E 
 2548      65642069 
 2548      6E7400
 2549              	.LASF65:
 2550 01d6 4379496E 		.ascii	"CyIntSetVector\000"
 2550      74536574 
 2550      56656374 
 2550      6F7200
 2551              	.LASF55:
 2552 01e5 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2552      5341525F 
 2552      5365715F 
 2552      315F6368 
 2552      616E6E65 
 2553              	.LASF51:
 2554 0202 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 63


 2554      747300
 2555              	.LASF19:
 2556 0209 72656733 		.ascii	"reg32\000"
 2556      3200
 2557              	.LASF14:
 2558 020f 666C6F61 		.ascii	"float32\000"
 2558      74333200 
 2559              	.LASF21:
 2560 0217 73697A65 		.ascii	"sizetype\000"
 2560      74797065 
 2560      00
 2561              	.LASF40:
 2562 0220 6C6F774C 		.ascii	"lowLimit\000"
 2562      696D6974 
 2562      00
 2563              	.LASF32:
 2564 0229 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2564      5341525F 
 2564      5365715F 
 2564      315F4973 
 2564      456E6443 
 2565              	.LASF30:
 2566 0247 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2566      5341525F 
 2566      5365715F 
 2566      315F5374 
 2566      6F70436F 
 2567              	.LASF61:
 2568 0261 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2568      4320342E 
 2568      392E3320 
 2568      32303135 
 2568      30333033 
 2569 0294 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2569      20726576 
 2569      6973696F 
 2569      6E203232 
 2569      31323230 
 2570 02c7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2570      66756E63 
 2570      74696F6E 
 2570      2D736563 
 2570      74696F6E 
 2571              	.LASF17:
 2572 02ef 696E7436 		.ascii	"int64\000"
 2572      3400
 2573              	.LASF59:
 2574 02f5 4379496E 		.ascii	"CyIntSetPriority\000"
 2574      74536574 
 2574      5072696F 
 2574      72697479 
 2574      00
 2575              	.LASF62:
 2576 0306 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2576      72617465 
 2576      645F536F 
 2576      75726365 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 64


 2576      5C50536F 
 2577              	.LASF15:
 2578 032d 666C6F61 		.ascii	"float\000"
 2578      7400
 2579              	.LASF47:
 2580 0333 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2580      5341525F 
 2580      5365715F 
 2580      315F5365 
 2580      74476169 
 2581              	.LASF28:
 2582 0349 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2582      5341525F 
 2582      5365715F 
 2582      315F5374 
 2582      6F7000
 2583              	.LASF42:
 2584 035c 68696768 		.ascii	"highLimit\000"
 2584      4C696D69 
 2584      7400
 2585              	.LASF66:
 2586 0366 43794861 		.ascii	"CyHalt\000"
 2586      6C7400
 2587              	.LASF1:
 2588 036d 756E7369 		.ascii	"unsigned char\000"
 2588      676E6564 
 2588      20636861 
 2588      7200
 2589              	.LASF2:
 2590 037b 73686F72 		.ascii	"short int\000"
 2590      7420696E 
 2590      7400
 2591              	.LASF53:
 2592 0385 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2592      5341525F 
 2592      5365715F 
 2592      315F436F 
 2592      756E7473 
 2593              	.LASF37:
 2594 03a2 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2594      5341525F 
 2594      5365715F 
 2594      315F5365 
 2594      74436861 
 2595              	.LASF22:
 2596 03bc 63684E75 		.ascii	"chNum\000"
 2596      6D00
 2597              	.LASF35:
 2598 03c2 6368616E 		.ascii	"chan\000"
 2598      00
 2599              	.LASF18:
 2600 03c7 63686172 		.ascii	"char\000"
 2600      00
 2601              	.LASF20:
 2602 03cc 63796973 		.ascii	"cyisraddress\000"
 2602      72616464 
 2602      72657373 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccG3pEsw.s 			page 65


 2602      00
 2603              	.LASF63:
 2604 03d9 473A5C47 		.ascii	"G:\\GitHub_Code\\firmware_pulse\\fw-pulse\\fw-BLE-M"
 2604      69744875 
 2604      625F436F 
 2604      64655C66 
 2604      69726D77 
 2605 0408 6F746F72 		.ascii	"otor\\fw-stone\\Pulse.cydsn\000"
 2605      5C66772D 
 2605      73746F6E 
 2605      655C5075 
 2605      6C73652E 
 2606              	.LASF39:
 2607 0422 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2607      5341525F 
 2607      5365715F 
 2607      315F5365 
 2607      744C6F77 
 2608              	.LASF46:
 2609 043c 6F666673 		.ascii	"offset\000"
 2609      657400
 2610              	.LASF50:
 2611 0443 61646343 		.ascii	"adcCounts\000"
 2611      6F756E74 
 2611      7300
 2612              	.LASF58:
 2613 044d 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2613      5341525F 
 2613      5365715F 
 2613      315F636F 
 2613      756E7473 
 2614              	.LASF31:
 2615 046b 73746174 		.ascii	"status\000"
 2615      757300
 2616              	.LASF45:
 2617 0472 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2617      5341525F 
 2617      5365715F 
 2617      315F5365 
 2617      744F6666 
 2618              	.LASF12:
 2619 048a 696E7431 		.ascii	"int16\000"
 2619      3600
 2620              	.LASF43:
 2621 0490 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2621      5341525F 
 2621      5365715F 
 2621      315F5365 
 2621      744C696D 
 2622              	.LASF36:
 2623 04ab 72657375 		.ascii	"result\000"
 2623      6C7400
 2624              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
